// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lec6Ex2a,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160t-fbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.211364,HLS_SYN_LAT=97,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=34,HLS_SYN_LUT=487,HLS_VERSION=2020_1}" *)

module lec6Ex2a (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_0_V,
        in_1_V,
        in_2_V,
        in_3_V,
        in_4_V,
        in_5_V,
        in_6_V,
        in_7_V,
        in_8_V,
        in_9_V,
        in_10_V,
        in_11_V,
        in_12_V,
        in_13_V,
        in_14_V,
        in_15_V,
        in_16_V,
        in_17_V,
        in_18_V,
        in_19_V,
        in_20_V,
        in_21_V,
        in_22_V,
        in_23_V,
        in_24_V,
        in_25_V,
        in_26_V,
        in_27_V,
        in_28_V,
        in_29_V,
        a_V,
        b_V,
        c_V,
        out_0_V,
        out_0_V_ap_vld,
        out_1_V,
        out_1_V_ap_vld,
        out_2_V,
        out_2_V_ap_vld,
        out_3_V,
        out_3_V_ap_vld,
        out_4_V,
        out_4_V_ap_vld,
        out_5_V,
        out_5_V_ap_vld,
        out_6_V,
        out_6_V_ap_vld,
        out_7_V,
        out_7_V_ap_vld,
        out_8_V,
        out_8_V_ap_vld,
        out_9_V,
        out_9_V_ap_vld,
        out_10_V,
        out_10_V_ap_vld,
        out_11_V,
        out_11_V_ap_vld,
        out_12_V,
        out_12_V_ap_vld,
        out_13_V,
        out_13_V_ap_vld,
        out_14_V,
        out_14_V_ap_vld,
        out_15_V,
        out_15_V_ap_vld,
        out_16_V,
        out_16_V_ap_vld,
        out_17_V,
        out_17_V_ap_vld,
        out_18_V,
        out_18_V_ap_vld,
        out_19_V,
        out_19_V_ap_vld,
        out_20_V,
        out_20_V_ap_vld,
        out_21_V,
        out_21_V_ap_vld,
        out_22_V,
        out_22_V_ap_vld,
        out_23_V,
        out_23_V_ap_vld,
        out_24_V,
        out_24_V_ap_vld,
        out_25_V,
        out_25_V_ap_vld,
        out_26_V,
        out_26_V_ap_vld,
        out_27_V,
        out_27_V_ap_vld,
        out_28_V,
        out_28_V_ap_vld,
        out_29_V,
        out_29_V_ap_vld,
        out_30_V,
        out_30_V_ap_vld,
        out_31_V,
        out_31_V_ap_vld,
        out_32_V,
        out_32_V_ap_vld,
        out_33_V,
        out_33_V_ap_vld,
        out_34_V,
        out_34_V_ap_vld,
        out_35_V,
        out_35_V_ap_vld,
        out_36_V,
        out_36_V_ap_vld,
        out_37_V,
        out_37_V_ap_vld,
        out_38_V,
        out_38_V_ap_vld,
        out_39_V,
        out_39_V_ap_vld,
        out_40_V,
        out_40_V_ap_vld,
        out_41_V,
        out_41_V_ap_vld,
        out_42_V,
        out_42_V_ap_vld,
        out_43_V,
        out_43_V_ap_vld,
        out_44_V,
        out_44_V_ap_vld,
        out_45_V,
        out_45_V_ap_vld,
        out_46_V,
        out_46_V_ap_vld,
        out_47_V,
        out_47_V_ap_vld,
        out_48_V,
        out_48_V_ap_vld,
        out_49_V,
        out_49_V_ap_vld,
        out_50_V,
        out_50_V_ap_vld,
        out_51_V,
        out_51_V_ap_vld,
        out_52_V,
        out_52_V_ap_vld,
        out_53_V,
        out_53_V_ap_vld,
        out_54_V,
        out_54_V_ap_vld,
        out_55_V,
        out_55_V_ap_vld,
        out_56_V,
        out_56_V_ap_vld,
        out_57_V,
        out_57_V_ap_vld,
        out_58_V,
        out_58_V_ap_vld,
        out_59_V,
        out_59_V_ap_vld,
        out_60_V,
        out_60_V_ap_vld,
        out_61_V,
        out_61_V_ap_vld,
        out_62_V,
        out_62_V_ap_vld,
        out_63_V,
        out_63_V_ap_vld,
        out_64_V,
        out_64_V_ap_vld,
        out_65_V,
        out_65_V_ap_vld,
        out_66_V,
        out_66_V_ap_vld,
        out_67_V,
        out_67_V_ap_vld,
        out_68_V,
        out_68_V_ap_vld,
        out_69_V,
        out_69_V_ap_vld,
        out_70_V,
        out_70_V_ap_vld,
        out_71_V,
        out_71_V_ap_vld,
        out_72_V,
        out_72_V_ap_vld,
        out_73_V,
        out_73_V_ap_vld,
        out_74_V,
        out_74_V_ap_vld,
        out_75_V,
        out_75_V_ap_vld,
        out_76_V,
        out_76_V_ap_vld,
        out_77_V,
        out_77_V_ap_vld,
        out_78_V,
        out_78_V_ap_vld,
        out_79_V,
        out_79_V_ap_vld,
        out_80_V,
        out_80_V_ap_vld,
        out_81_V,
        out_81_V_ap_vld,
        out_82_V,
        out_82_V_ap_vld,
        out_83_V,
        out_83_V_ap_vld,
        out_84_V,
        out_84_V_ap_vld,
        out_85_V,
        out_85_V_ap_vld,
        out_86_V,
        out_86_V_ap_vld,
        out_87_V,
        out_87_V_ap_vld,
        out_88_V,
        out_88_V_ap_vld,
        out_89_V,
        out_89_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_0_V;
input  [7:0] in_1_V;
input  [7:0] in_2_V;
input  [7:0] in_3_V;
input  [7:0] in_4_V;
input  [7:0] in_5_V;
input  [7:0] in_6_V;
input  [7:0] in_7_V;
input  [7:0] in_8_V;
input  [7:0] in_9_V;
input  [7:0] in_10_V;
input  [7:0] in_11_V;
input  [7:0] in_12_V;
input  [7:0] in_13_V;
input  [7:0] in_14_V;
input  [7:0] in_15_V;
input  [7:0] in_16_V;
input  [7:0] in_17_V;
input  [7:0] in_18_V;
input  [7:0] in_19_V;
input  [7:0] in_20_V;
input  [7:0] in_21_V;
input  [7:0] in_22_V;
input  [7:0] in_23_V;
input  [7:0] in_24_V;
input  [7:0] in_25_V;
input  [7:0] in_26_V;
input  [7:0] in_27_V;
input  [7:0] in_28_V;
input  [7:0] in_29_V;
input  [1:0] a_V;
input  [1:0] b_V;
input  [1:0] c_V;
output  [7:0] out_0_V;
output   out_0_V_ap_vld;
output  [7:0] out_1_V;
output   out_1_V_ap_vld;
output  [7:0] out_2_V;
output   out_2_V_ap_vld;
output  [7:0] out_3_V;
output   out_3_V_ap_vld;
output  [7:0] out_4_V;
output   out_4_V_ap_vld;
output  [7:0] out_5_V;
output   out_5_V_ap_vld;
output  [7:0] out_6_V;
output   out_6_V_ap_vld;
output  [7:0] out_7_V;
output   out_7_V_ap_vld;
output  [7:0] out_8_V;
output   out_8_V_ap_vld;
output  [7:0] out_9_V;
output   out_9_V_ap_vld;
output  [7:0] out_10_V;
output   out_10_V_ap_vld;
output  [7:0] out_11_V;
output   out_11_V_ap_vld;
output  [7:0] out_12_V;
output   out_12_V_ap_vld;
output  [7:0] out_13_V;
output   out_13_V_ap_vld;
output  [7:0] out_14_V;
output   out_14_V_ap_vld;
output  [7:0] out_15_V;
output   out_15_V_ap_vld;
output  [7:0] out_16_V;
output   out_16_V_ap_vld;
output  [7:0] out_17_V;
output   out_17_V_ap_vld;
output  [7:0] out_18_V;
output   out_18_V_ap_vld;
output  [7:0] out_19_V;
output   out_19_V_ap_vld;
output  [7:0] out_20_V;
output   out_20_V_ap_vld;
output  [7:0] out_21_V;
output   out_21_V_ap_vld;
output  [7:0] out_22_V;
output   out_22_V_ap_vld;
output  [7:0] out_23_V;
output   out_23_V_ap_vld;
output  [7:0] out_24_V;
output   out_24_V_ap_vld;
output  [7:0] out_25_V;
output   out_25_V_ap_vld;
output  [7:0] out_26_V;
output   out_26_V_ap_vld;
output  [7:0] out_27_V;
output   out_27_V_ap_vld;
output  [7:0] out_28_V;
output   out_28_V_ap_vld;
output  [7:0] out_29_V;
output   out_29_V_ap_vld;
output  [7:0] out_30_V;
output   out_30_V_ap_vld;
output  [7:0] out_31_V;
output   out_31_V_ap_vld;
output  [7:0] out_32_V;
output   out_32_V_ap_vld;
output  [7:0] out_33_V;
output   out_33_V_ap_vld;
output  [7:0] out_34_V;
output   out_34_V_ap_vld;
output  [7:0] out_35_V;
output   out_35_V_ap_vld;
output  [7:0] out_36_V;
output   out_36_V_ap_vld;
output  [7:0] out_37_V;
output   out_37_V_ap_vld;
output  [7:0] out_38_V;
output   out_38_V_ap_vld;
output  [7:0] out_39_V;
output   out_39_V_ap_vld;
output  [7:0] out_40_V;
output   out_40_V_ap_vld;
output  [7:0] out_41_V;
output   out_41_V_ap_vld;
output  [7:0] out_42_V;
output   out_42_V_ap_vld;
output  [7:0] out_43_V;
output   out_43_V_ap_vld;
output  [7:0] out_44_V;
output   out_44_V_ap_vld;
output  [7:0] out_45_V;
output   out_45_V_ap_vld;
output  [7:0] out_46_V;
output   out_46_V_ap_vld;
output  [7:0] out_47_V;
output   out_47_V_ap_vld;
output  [7:0] out_48_V;
output   out_48_V_ap_vld;
output  [7:0] out_49_V;
output   out_49_V_ap_vld;
output  [7:0] out_50_V;
output   out_50_V_ap_vld;
output  [7:0] out_51_V;
output   out_51_V_ap_vld;
output  [7:0] out_52_V;
output   out_52_V_ap_vld;
output  [7:0] out_53_V;
output   out_53_V_ap_vld;
output  [7:0] out_54_V;
output   out_54_V_ap_vld;
output  [7:0] out_55_V;
output   out_55_V_ap_vld;
output  [7:0] out_56_V;
output   out_56_V_ap_vld;
output  [7:0] out_57_V;
output   out_57_V_ap_vld;
output  [7:0] out_58_V;
output   out_58_V_ap_vld;
output  [7:0] out_59_V;
output   out_59_V_ap_vld;
output  [7:0] out_60_V;
output   out_60_V_ap_vld;
output  [7:0] out_61_V;
output   out_61_V_ap_vld;
output  [7:0] out_62_V;
output   out_62_V_ap_vld;
output  [7:0] out_63_V;
output   out_63_V_ap_vld;
output  [7:0] out_64_V;
output   out_64_V_ap_vld;
output  [7:0] out_65_V;
output   out_65_V_ap_vld;
output  [7:0] out_66_V;
output   out_66_V_ap_vld;
output  [7:0] out_67_V;
output   out_67_V_ap_vld;
output  [7:0] out_68_V;
output   out_68_V_ap_vld;
output  [7:0] out_69_V;
output   out_69_V_ap_vld;
output  [7:0] out_70_V;
output   out_70_V_ap_vld;
output  [7:0] out_71_V;
output   out_71_V_ap_vld;
output  [7:0] out_72_V;
output   out_72_V_ap_vld;
output  [7:0] out_73_V;
output   out_73_V_ap_vld;
output  [7:0] out_74_V;
output   out_74_V_ap_vld;
output  [7:0] out_75_V;
output   out_75_V_ap_vld;
output  [7:0] out_76_V;
output   out_76_V_ap_vld;
output  [7:0] out_77_V;
output   out_77_V_ap_vld;
output  [7:0] out_78_V;
output   out_78_V_ap_vld;
output  [7:0] out_79_V;
output   out_79_V_ap_vld;
output  [7:0] out_80_V;
output   out_80_V_ap_vld;
output  [7:0] out_81_V;
output   out_81_V_ap_vld;
output  [7:0] out_82_V;
output   out_82_V_ap_vld;
output  [7:0] out_83_V;
output   out_83_V_ap_vld;
output  [7:0] out_84_V;
output   out_84_V_ap_vld;
output  [7:0] out_85_V;
output   out_85_V_ap_vld;
output  [7:0] out_86_V;
output   out_86_V_ap_vld;
output  [7:0] out_87_V;
output   out_87_V_ap_vld;
output  [7:0] out_88_V;
output   out_88_V_ap_vld;
output  [7:0] out_89_V;
output   out_89_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_0_V_ap_vld;
reg out_1_V_ap_vld;
reg out_2_V_ap_vld;
reg out_3_V_ap_vld;
reg out_4_V_ap_vld;
reg out_5_V_ap_vld;
reg out_6_V_ap_vld;
reg out_7_V_ap_vld;
reg out_8_V_ap_vld;
reg out_9_V_ap_vld;
reg out_10_V_ap_vld;
reg out_11_V_ap_vld;
reg out_12_V_ap_vld;
reg out_13_V_ap_vld;
reg out_14_V_ap_vld;
reg out_15_V_ap_vld;
reg out_16_V_ap_vld;
reg out_17_V_ap_vld;
reg out_18_V_ap_vld;
reg out_19_V_ap_vld;
reg out_20_V_ap_vld;
reg out_21_V_ap_vld;
reg out_22_V_ap_vld;
reg out_23_V_ap_vld;
reg out_24_V_ap_vld;
reg out_25_V_ap_vld;
reg out_26_V_ap_vld;
reg out_27_V_ap_vld;
reg out_28_V_ap_vld;
reg out_29_V_ap_vld;
reg out_30_V_ap_vld;
reg out_31_V_ap_vld;
reg out_32_V_ap_vld;
reg out_33_V_ap_vld;
reg out_34_V_ap_vld;
reg out_35_V_ap_vld;
reg out_36_V_ap_vld;
reg out_37_V_ap_vld;
reg out_38_V_ap_vld;
reg out_39_V_ap_vld;
reg out_40_V_ap_vld;
reg out_41_V_ap_vld;
reg out_42_V_ap_vld;
reg out_43_V_ap_vld;
reg out_44_V_ap_vld;
reg out_45_V_ap_vld;
reg out_46_V_ap_vld;
reg out_47_V_ap_vld;
reg out_48_V_ap_vld;
reg out_49_V_ap_vld;
reg out_50_V_ap_vld;
reg out_51_V_ap_vld;
reg out_52_V_ap_vld;
reg out_53_V_ap_vld;
reg out_54_V_ap_vld;
reg out_55_V_ap_vld;
reg out_56_V_ap_vld;
reg out_57_V_ap_vld;
reg out_58_V_ap_vld;
reg out_59_V_ap_vld;
reg out_60_V_ap_vld;
reg out_61_V_ap_vld;
reg out_62_V_ap_vld;
reg out_63_V_ap_vld;
reg out_64_V_ap_vld;
reg out_65_V_ap_vld;
reg out_66_V_ap_vld;
reg out_67_V_ap_vld;
reg out_68_V_ap_vld;
reg out_69_V_ap_vld;
reg out_70_V_ap_vld;
reg out_71_V_ap_vld;
reg out_72_V_ap_vld;
reg out_73_V_ap_vld;
reg out_74_V_ap_vld;
reg out_75_V_ap_vld;
reg out_76_V_ap_vld;
reg out_77_V_ap_vld;
reg out_78_V_ap_vld;
reg out_79_V_ap_vld;
reg out_80_V_ap_vld;
reg out_81_V_ap_vld;
reg out_82_V_ap_vld;
reg out_83_V_ap_vld;
reg out_84_V_ap_vld;
reg out_85_V_ap_vld;
reg out_86_V_ap_vld;
reg out_87_V_ap_vld;
reg out_88_V_ap_vld;
reg out_89_V_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] zext_ln209_fu_1324_p1;
reg   [7:0] zext_ln209_reg_1587;
wire   [7:0] zext_ln209_1_fu_1328_p1;
reg   [7:0] zext_ln209_1_reg_1592;
wire   [7:0] zext_ln209_3_fu_1342_p1;
reg   [7:0] zext_ln209_3_reg_1597;
wire   [1:0] j_V_fu_1352_p2;
reg   [1:0] j_V_reg_1605;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln887_fu_1346_p2;
wire   [7:0] tmp_V_fu_1372_p2;
reg   [7:0] tmp_V_reg_1630;
wire   [6:0] sub_ln214_fu_1397_p2;
reg   [6:0] sub_ln214_reg_1635;
wire   [4:0] i_V_fu_1409_p2;
wire    ap_CS_fsm_state3;
reg   [1:0] t_V_reg_1302;
wire   [0:0] icmp_ln887_1_fu_1403_p2;
reg   [4:0] t_V_1_reg_1313;
(* use_dsp48 = "no" *) wire   [7:0] y_V_fu_1486_p2;
wire   [6:0] k_V_fu_1419_p2;
wire   [1:0] mul_ln209_1_fu_1336_p0;
wire   [3:0] zext_ln209_2_fu_1332_p1;
wire   [1:0] mul_ln209_1_fu_1336_p1;
wire   [3:0] mul_ln209_1_fu_1336_p2;
wire   [1:0] tmp_V_fu_1372_p0;
wire  signed [7:0] phi_ln_fu_1358_p6;
wire   [2:0] shl_ln214_1_fu_1385_p3;
wire   [6:0] shl_ln_fu_1377_p3;
wire   [6:0] zext_ln214_fu_1393_p1;
wire   [6:0] zext_ln214_1_fu_1415_p1;
wire  signed [7:0] grp_fu_1580_p3;
wire  signed [7:0] x_V_fu_1424_p32;
wire   [1:0] grp_fu_1580_p1;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

lec6Ex2a_mux_42_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
lec6Ex2a_mux_42_8bkb_U1(
    .din0(in_0_V),
    .din1(in_1_V),
    .din2(in_2_V),
    .din3(in_3_V),
    .din4(t_V_reg_1302),
    .dout(phi_ln_fu_1358_p6)
);

lec6Ex2a_mux_305_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
lec6Ex2a_mux_305_cud_U2(
    .din0(in_0_V),
    .din1(in_1_V),
    .din2(in_2_V),
    .din3(in_3_V),
    .din4(in_4_V),
    .din5(in_5_V),
    .din6(in_6_V),
    .din7(in_7_V),
    .din8(in_8_V),
    .din9(in_9_V),
    .din10(in_10_V),
    .din11(in_11_V),
    .din12(in_12_V),
    .din13(in_13_V),
    .din14(in_14_V),
    .din15(in_15_V),
    .din16(in_16_V),
    .din17(in_17_V),
    .din18(in_18_V),
    .din19(in_19_V),
    .din20(in_20_V),
    .din21(in_21_V),
    .din22(in_22_V),
    .din23(in_23_V),
    .din24(in_24_V),
    .din25(in_25_V),
    .din26(in_26_V),
    .din27(in_27_V),
    .din28(in_28_V),
    .din29(in_29_V),
    .din30(t_V_1_reg_1313),
    .dout(x_V_fu_1424_p32)
);

lec6Ex2a_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
lec6Ex2a_mac_muladEe_U3(
    .din0(x_V_fu_1424_p32),
    .din1(grp_fu_1580_p1),
    .din2(tmp_V_reg_1630),
    .dout(grp_fu_1580_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_1_reg_1313 <= i_V_fu_1409_p2;
    end else if (((icmp_ln887_fu_1346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_1_reg_1313 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_1_fu_1403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_reg_1302 <= j_V_reg_1605;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_1302 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        j_V_reg_1605 <= j_V_fu_1352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_1346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln214_reg_1635[6 : 1] <= sub_ln214_fu_1397_p2[6 : 1];
        tmp_V_reg_1630 <= tmp_V_fu_1372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln209_1_reg_1592[1 : 0] <= zext_ln209_1_fu_1328_p1[1 : 0];
        zext_ln209_3_reg_1597[3 : 0] <= zext_ln209_3_fu_1342_p1[3 : 0];
        zext_ln209_reg_1587[1 : 0] <= zext_ln209_fu_1324_p1[1 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_1346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_fu_1346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd0) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_0_V_ap_vld = 1'b1;
    end else begin
        out_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd10) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_10_V_ap_vld = 1'b1;
    end else begin
        out_10_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd11) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_11_V_ap_vld = 1'b1;
    end else begin
        out_11_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd12) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_12_V_ap_vld = 1'b1;
    end else begin
        out_12_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd13) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_13_V_ap_vld = 1'b1;
    end else begin
        out_13_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd14) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_14_V_ap_vld = 1'b1;
    end else begin
        out_14_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd15) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_15_V_ap_vld = 1'b1;
    end else begin
        out_15_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd16) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_16_V_ap_vld = 1'b1;
    end else begin
        out_16_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd17) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_17_V_ap_vld = 1'b1;
    end else begin
        out_17_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd18) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_18_V_ap_vld = 1'b1;
    end else begin
        out_18_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd19) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_19_V_ap_vld = 1'b1;
    end else begin
        out_19_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd1) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_1_V_ap_vld = 1'b1;
    end else begin
        out_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd20) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_20_V_ap_vld = 1'b1;
    end else begin
        out_20_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd21) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_21_V_ap_vld = 1'b1;
    end else begin
        out_21_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd22) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_22_V_ap_vld = 1'b1;
    end else begin
        out_22_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd23) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_23_V_ap_vld = 1'b1;
    end else begin
        out_23_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd24) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_24_V_ap_vld = 1'b1;
    end else begin
        out_24_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd25) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_25_V_ap_vld = 1'b1;
    end else begin
        out_25_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd26) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_26_V_ap_vld = 1'b1;
    end else begin
        out_26_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd27) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_27_V_ap_vld = 1'b1;
    end else begin
        out_27_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd28) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_28_V_ap_vld = 1'b1;
    end else begin
        out_28_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd29) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_29_V_ap_vld = 1'b1;
    end else begin
        out_29_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd2) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_2_V_ap_vld = 1'b1;
    end else begin
        out_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd30) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_30_V_ap_vld = 1'b1;
    end else begin
        out_30_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd31) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_31_V_ap_vld = 1'b1;
    end else begin
        out_31_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd32) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_32_V_ap_vld = 1'b1;
    end else begin
        out_32_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd33) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_33_V_ap_vld = 1'b1;
    end else begin
        out_33_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd34) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_34_V_ap_vld = 1'b1;
    end else begin
        out_34_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd35) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_35_V_ap_vld = 1'b1;
    end else begin
        out_35_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd36) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_36_V_ap_vld = 1'b1;
    end else begin
        out_36_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd37) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_37_V_ap_vld = 1'b1;
    end else begin
        out_37_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd38) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_38_V_ap_vld = 1'b1;
    end else begin
        out_38_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd39) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_39_V_ap_vld = 1'b1;
    end else begin
        out_39_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd3) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_3_V_ap_vld = 1'b1;
    end else begin
        out_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd40) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_40_V_ap_vld = 1'b1;
    end else begin
        out_40_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd41) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_41_V_ap_vld = 1'b1;
    end else begin
        out_41_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd42) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_42_V_ap_vld = 1'b1;
    end else begin
        out_42_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd43) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_43_V_ap_vld = 1'b1;
    end else begin
        out_43_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd44) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_44_V_ap_vld = 1'b1;
    end else begin
        out_44_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd45) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_45_V_ap_vld = 1'b1;
    end else begin
        out_45_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd46) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_46_V_ap_vld = 1'b1;
    end else begin
        out_46_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd47) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_47_V_ap_vld = 1'b1;
    end else begin
        out_47_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd48) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_48_V_ap_vld = 1'b1;
    end else begin
        out_48_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd49) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_49_V_ap_vld = 1'b1;
    end else begin
        out_49_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd4) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_4_V_ap_vld = 1'b1;
    end else begin
        out_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd50) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_50_V_ap_vld = 1'b1;
    end else begin
        out_50_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd51) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_51_V_ap_vld = 1'b1;
    end else begin
        out_51_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd52) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_52_V_ap_vld = 1'b1;
    end else begin
        out_52_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd53) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_53_V_ap_vld = 1'b1;
    end else begin
        out_53_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd54) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_54_V_ap_vld = 1'b1;
    end else begin
        out_54_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd55) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_55_V_ap_vld = 1'b1;
    end else begin
        out_55_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd56) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_56_V_ap_vld = 1'b1;
    end else begin
        out_56_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd57) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_57_V_ap_vld = 1'b1;
    end else begin
        out_57_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd58) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_58_V_ap_vld = 1'b1;
    end else begin
        out_58_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd59) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_59_V_ap_vld = 1'b1;
    end else begin
        out_59_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd5) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_5_V_ap_vld = 1'b1;
    end else begin
        out_5_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd60) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_60_V_ap_vld = 1'b1;
    end else begin
        out_60_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd61) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_61_V_ap_vld = 1'b1;
    end else begin
        out_61_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd62) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_62_V_ap_vld = 1'b1;
    end else begin
        out_62_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd63) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_63_V_ap_vld = 1'b1;
    end else begin
        out_63_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd64) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_64_V_ap_vld = 1'b1;
    end else begin
        out_64_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd65) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_65_V_ap_vld = 1'b1;
    end else begin
        out_65_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd66) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_66_V_ap_vld = 1'b1;
    end else begin
        out_66_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd67) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_67_V_ap_vld = 1'b1;
    end else begin
        out_67_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd68) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_68_V_ap_vld = 1'b1;
    end else begin
        out_68_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd69) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_69_V_ap_vld = 1'b1;
    end else begin
        out_69_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd6) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_6_V_ap_vld = 1'b1;
    end else begin
        out_6_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd70) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_70_V_ap_vld = 1'b1;
    end else begin
        out_70_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd71) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_71_V_ap_vld = 1'b1;
    end else begin
        out_71_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd72) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_72_V_ap_vld = 1'b1;
    end else begin
        out_72_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd73) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_73_V_ap_vld = 1'b1;
    end else begin
        out_73_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd74) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_74_V_ap_vld = 1'b1;
    end else begin
        out_74_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd75) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_75_V_ap_vld = 1'b1;
    end else begin
        out_75_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd76) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_76_V_ap_vld = 1'b1;
    end else begin
        out_76_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd77) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_77_V_ap_vld = 1'b1;
    end else begin
        out_77_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd78) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_78_V_ap_vld = 1'b1;
    end else begin
        out_78_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd79) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_79_V_ap_vld = 1'b1;
    end else begin
        out_79_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd7) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_7_V_ap_vld = 1'b1;
    end else begin
        out_7_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd80) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_80_V_ap_vld = 1'b1;
    end else begin
        out_80_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd81) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_81_V_ap_vld = 1'b1;
    end else begin
        out_81_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd82) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_82_V_ap_vld = 1'b1;
    end else begin
        out_82_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd83) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_83_V_ap_vld = 1'b1;
    end else begin
        out_83_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd84) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_84_V_ap_vld = 1'b1;
    end else begin
        out_84_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd85) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_85_V_ap_vld = 1'b1;
    end else begin
        out_85_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd86) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_86_V_ap_vld = 1'b1;
    end else begin
        out_86_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd87) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_87_V_ap_vld = 1'b1;
    end else begin
        out_87_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd88) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_88_V_ap_vld = 1'b1;
    end else begin
        out_88_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((((((((((((((((((((((((((((((((((((((((k_V_fu_1419_p2 == 7'd126) & (icmp_ln887_1_fu_1403_p2 == 1'd0)) | ((k_V_fu_1419_p2 == 7'd127) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd125) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd124) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd123) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd122) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd121) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd120) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd119) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd118) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd117) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd116) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd115) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd114) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd113) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd112) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd111) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd110) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd109) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd108) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd107) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd106) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd105) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd104) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd103) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd102) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd101) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd100) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd99) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd98) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd97) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd96) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd95) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd94) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd93) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd92) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd91) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd90) & (icmp_ln887_1_fu_1403_p2 == 1'd0))) | ((k_V_fu_1419_p2 == 7'd89) & (icmp_ln887_1_fu_1403_p2 == 1'd0))))) begin
        out_89_V_ap_vld = 1'b1;
    end else begin
        out_89_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd8) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_8_V_ap_vld = 1'b1;
    end else begin
        out_8_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_V_fu_1419_p2 == 7'd9) & (icmp_ln887_1_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_9_V_ap_vld = 1'b1;
    end else begin
        out_9_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln887_fu_1346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln887_1_fu_1403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign grp_fu_1580_p1 = zext_ln209_1_reg_1592;

assign i_V_fu_1409_p2 = (t_V_1_reg_1313 + 5'd1);

assign icmp_ln887_1_fu_1403_p2 = ((t_V_1_reg_1313 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_1346_p2 = ((t_V_reg_1302 == 2'd3) ? 1'b1 : 1'b0);

assign j_V_fu_1352_p2 = (t_V_reg_1302 + 2'd1);

assign k_V_fu_1419_p2 = (sub_ln214_reg_1635 + zext_ln214_1_fu_1415_p1);

assign mul_ln209_1_fu_1336_p0 = zext_ln209_2_fu_1332_p1;

assign mul_ln209_1_fu_1336_p1 = zext_ln209_2_fu_1332_p1;

assign mul_ln209_1_fu_1336_p2 = (mul_ln209_1_fu_1336_p0 * mul_ln209_1_fu_1336_p1);

assign out_0_V = y_V_fu_1486_p2;

assign out_10_V = y_V_fu_1486_p2;

assign out_11_V = y_V_fu_1486_p2;

assign out_12_V = y_V_fu_1486_p2;

assign out_13_V = y_V_fu_1486_p2;

assign out_14_V = y_V_fu_1486_p2;

assign out_15_V = y_V_fu_1486_p2;

assign out_16_V = y_V_fu_1486_p2;

assign out_17_V = y_V_fu_1486_p2;

assign out_18_V = y_V_fu_1486_p2;

assign out_19_V = y_V_fu_1486_p2;

assign out_1_V = y_V_fu_1486_p2;

assign out_20_V = y_V_fu_1486_p2;

assign out_21_V = y_V_fu_1486_p2;

assign out_22_V = y_V_fu_1486_p2;

assign out_23_V = y_V_fu_1486_p2;

assign out_24_V = y_V_fu_1486_p2;

assign out_25_V = y_V_fu_1486_p2;

assign out_26_V = y_V_fu_1486_p2;

assign out_27_V = y_V_fu_1486_p2;

assign out_28_V = y_V_fu_1486_p2;

assign out_29_V = y_V_fu_1486_p2;

assign out_2_V = y_V_fu_1486_p2;

assign out_30_V = y_V_fu_1486_p2;

assign out_31_V = y_V_fu_1486_p2;

assign out_32_V = y_V_fu_1486_p2;

assign out_33_V = y_V_fu_1486_p2;

assign out_34_V = y_V_fu_1486_p2;

assign out_35_V = y_V_fu_1486_p2;

assign out_36_V = y_V_fu_1486_p2;

assign out_37_V = y_V_fu_1486_p2;

assign out_38_V = y_V_fu_1486_p2;

assign out_39_V = y_V_fu_1486_p2;

assign out_3_V = y_V_fu_1486_p2;

assign out_40_V = y_V_fu_1486_p2;

assign out_41_V = y_V_fu_1486_p2;

assign out_42_V = y_V_fu_1486_p2;

assign out_43_V = y_V_fu_1486_p2;

assign out_44_V = y_V_fu_1486_p2;

assign out_45_V = y_V_fu_1486_p2;

assign out_46_V = y_V_fu_1486_p2;

assign out_47_V = y_V_fu_1486_p2;

assign out_48_V = y_V_fu_1486_p2;

assign out_49_V = y_V_fu_1486_p2;

assign out_4_V = y_V_fu_1486_p2;

assign out_50_V = y_V_fu_1486_p2;

assign out_51_V = y_V_fu_1486_p2;

assign out_52_V = y_V_fu_1486_p2;

assign out_53_V = y_V_fu_1486_p2;

assign out_54_V = y_V_fu_1486_p2;

assign out_55_V = y_V_fu_1486_p2;

assign out_56_V = y_V_fu_1486_p2;

assign out_57_V = y_V_fu_1486_p2;

assign out_58_V = y_V_fu_1486_p2;

assign out_59_V = y_V_fu_1486_p2;

assign out_5_V = y_V_fu_1486_p2;

assign out_60_V = y_V_fu_1486_p2;

assign out_61_V = y_V_fu_1486_p2;

assign out_62_V = y_V_fu_1486_p2;

assign out_63_V = y_V_fu_1486_p2;

assign out_64_V = y_V_fu_1486_p2;

assign out_65_V = y_V_fu_1486_p2;

assign out_66_V = y_V_fu_1486_p2;

assign out_67_V = y_V_fu_1486_p2;

assign out_68_V = y_V_fu_1486_p2;

assign out_69_V = y_V_fu_1486_p2;

assign out_6_V = y_V_fu_1486_p2;

assign out_70_V = y_V_fu_1486_p2;

assign out_71_V = y_V_fu_1486_p2;

assign out_72_V = y_V_fu_1486_p2;

assign out_73_V = y_V_fu_1486_p2;

assign out_74_V = y_V_fu_1486_p2;

assign out_75_V = y_V_fu_1486_p2;

assign out_76_V = y_V_fu_1486_p2;

assign out_77_V = y_V_fu_1486_p2;

assign out_78_V = y_V_fu_1486_p2;

assign out_79_V = y_V_fu_1486_p2;

assign out_7_V = y_V_fu_1486_p2;

assign out_80_V = y_V_fu_1486_p2;

assign out_81_V = y_V_fu_1486_p2;

assign out_82_V = y_V_fu_1486_p2;

assign out_83_V = y_V_fu_1486_p2;

assign out_84_V = y_V_fu_1486_p2;

assign out_85_V = y_V_fu_1486_p2;

assign out_86_V = y_V_fu_1486_p2;

assign out_87_V = y_V_fu_1486_p2;

assign out_88_V = y_V_fu_1486_p2;

assign out_89_V = y_V_fu_1486_p2;

assign out_8_V = y_V_fu_1486_p2;

assign out_9_V = y_V_fu_1486_p2;

assign shl_ln214_1_fu_1385_p3 = {{t_V_reg_1302}, {1'd0}};

assign shl_ln_fu_1377_p3 = {{t_V_reg_1302}, {5'd0}};

assign sub_ln214_fu_1397_p2 = (shl_ln_fu_1377_p3 - zext_ln214_fu_1393_p1);

assign tmp_V_fu_1372_p0 = zext_ln209_reg_1587;

assign tmp_V_fu_1372_p2 = ($signed({{1'b0}, {tmp_V_fu_1372_p0}}) * $signed(phi_ln_fu_1358_p6));

assign y_V_fu_1486_p2 = ($signed(grp_fu_1580_p3) + $signed(zext_ln209_3_reg_1597));

assign zext_ln209_1_fu_1328_p1 = a_V;

assign zext_ln209_2_fu_1332_p1 = c_V;

assign zext_ln209_3_fu_1342_p1 = mul_ln209_1_fu_1336_p2;

assign zext_ln209_fu_1324_p1 = b_V;

assign zext_ln214_1_fu_1415_p1 = t_V_1_reg_1313;

assign zext_ln214_fu_1393_p1 = shl_ln214_1_fu_1385_p3;

always @ (posedge ap_clk) begin
    zext_ln209_reg_1587[7:2] <= 6'b000000;
    zext_ln209_1_reg_1592[7:2] <= 6'b000000;
    zext_ln209_3_reg_1597[7:4] <= 4'b0000;
    sub_ln214_reg_1635[0] <= 1'b0;
end

endmodule //lec6Ex2a
