

================================================================
== Vivado HLS Report for 'lec8Ex1'
================================================================
* Date:           Tue May  9 14:54:28 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        hw4_arrpartcyclic
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160t-fbg484-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.130 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      181|      181| 1.810 us | 1.810 us |  181|  181|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+---------+---------+----------+-----------+-----------+------+----------+
        |            |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+---------+---------+----------+-----------+-----------+------+----------+
        |- for_Loop  |      180|      180|         3|          -|          -|    60|    no    |
        +------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.49>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([20 x i32]* %out_2), !map !19"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([20 x i32]* %out_1), !map !25"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([20 x i32]* %out_0), !map !31"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([30 x i32]* %in_1), !map !37"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([30 x i32]* %in_0), !map !43"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %a) nounwind, !map !49"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %b) nounwind, !map !55"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %c) nounwind, !map !59"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @lec8Ex1_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%c_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %c)" [arrpartcyclic_lec8Ex1.c:4]   --->   Operation 14 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%b_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %b)" [arrpartcyclic_lec8Ex1.c:4]   --->   Operation 15 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%a_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %a)" [arrpartcyclic_lec8Ex1.c:4]   --->   Operation 16 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i16 %a_read to i32" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 17 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sext_ln34 = sext i16 %b_read to i17" [arrpartcyclic_lec8Ex1.c:34->arrpartcyclic_lec8Ex1.c:24]   --->   Operation 18 'sext' 'sext_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (5.49ns)   --->   "%res = mul i32 %c_read, %c_read" [arrpartcyclic_lec8Ex1.c:34->arrpartcyclic_lec8Ex1.c:24]   --->   Operation 19 'mul' 'res' <Predicate = true> <Delay = 5.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.34ns)   --->   "%add_ln24_1 = add i17 %sext_ln34, 39" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 20 'add' 'add_ln24_1' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln24_1 = sext i17 %add_ln24_1 to i32" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 21 'sext' 'sext_ln24_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.87ns)   --->   "br label %1" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.87>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 23 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%phi_mul = phi i13 [ 0, %0 ], [ %add_ln26, %2 ]" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 24 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%phi_urem = phi i6 [ 0, %0 ], [ %select_ln17, %2 ]" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 25 'phi' 'phi_urem' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.90ns)   --->   "%icmp_ln17 = icmp eq i6 %i_0, -4" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 26 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 60, i64 60, i64 60) nounwind"   --->   Operation 27 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.18ns)   --->   "%i = add i6 %i_0, 1" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 28 'add' 'i' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln17, label %3, label %_ifconv" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln19 = trunc i6 %i_0 to i1" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 30 'trunc' 'trunc_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%lshr_ln = call i5 @_ssdm_op_PartSelect.i5.i6.i32.i32(i6 %i_0, i32 1, i32 5)" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 31 'partselect' 'lshr_ln' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i5 %lshr_ln to i64" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 32 'zext' 'zext_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%in_0_addr = getelementptr [30 x i32]* %in_0, i64 0, i64 %zext_ln19" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 33 'getelementptr' 'in_0_addr' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%in_1_addr = getelementptr [30 x i32]* %in_1, i64 0, i64 %zext_ln19" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 34 'getelementptr' 'in_1_addr' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 35 [2/2] (1.14ns)   --->   "%in_1_load = load i32* %in_1_addr, align 4" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 35 'load' 'in_1_load' <Predicate = (!icmp_ln17)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_2 : Operation 36 [2/2] (1.14ns)   --->   "%in_0_load = load i32* %in_0_addr, align 4" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 36 'load' 'in_0_load' <Predicate = (!icmp_ln17)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_2 : Operation 37 [1/1] (1.35ns)   --->   "%add_ln26 = add i13 86, %phi_mul" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 37 'add' 'add_ln26' <Predicate = (!icmp_ln17)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_PartSelect.i5.i13.i32.i32(i13 %phi_mul, i32 8, i32 12)" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 38 'partselect' 'tmp' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "ret void" [arrpartcyclic_lec8Ex1.c:28]   --->   Operation 39 'ret' <Predicate = (icmp_ln17)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.13>
ST_3 : Operation 40 [1/2] (1.14ns)   --->   "%in_1_load = load i32* %in_1_addr, align 4" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 40 'load' 'in_1_load' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_3 : Operation 41 [1/2] (1.14ns)   --->   "%in_0_load = load i32* %in_0_addr, align 4" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 41 'load' 'in_0_load' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_3 : Operation 42 [1/1] (0.49ns)   --->   "%x = select i1 %trunc_ln19, i32 %in_1_load, i32 %in_0_load" [arrpartcyclic_lec8Ex1.c:19]   --->   Operation 42 'select' 'x' <Predicate = true> <Delay = 0.49> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (5.49ns)   --->   "%mul_ln24 = mul i32 %x, %sext_ln24" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 43 'mul' 'mul_ln24' <Predicate = true> <Delay = 5.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.40>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str2) nounwind" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 44 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln24 = add i32 %res, %mul_ln24" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 45 'add' 'add_ln24' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 46 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%y = add i32 %sext_ln24_1, %add_ln24" [arrpartcyclic_lec8Ex1.c:24]   --->   Operation 46 'add' 'y' <Predicate = true> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln26 = trunc i6 %phi_urem to i3" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 47 'trunc' 'trunc_ln26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i5 %tmp to i64" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 48 'zext' 'zext_ln26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%out_0_addr = getelementptr [20 x i32]* %out_0, i64 0, i64 %zext_ln26" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 49 'getelementptr' 'out_0_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%out_1_addr = getelementptr [20 x i32]* %out_1, i64 0, i64 %zext_ln26" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 50 'getelementptr' 'out_1_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%out_2_addr = getelementptr [20 x i32]* %out_2, i64 0, i64 %zext_ln26" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 51 'getelementptr' 'out_2_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.68ns)   --->   "switch i3 %trunc_ln26, label %branch2 [
    i3 0, label %branch07
    i3 1, label %branch18
  ]" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 52 'switch' <Predicate = true> <Delay = 0.68>
ST_4 : Operation 53 [1/1] (1.14ns)   --->   "store i32 %y, i32* %out_1_addr, align 4" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 53 'store' <Predicate = (trunc_ln26 == 1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %2" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 54 'br' <Predicate = (trunc_ln26 == 1)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (1.14ns)   --->   "store i32 %y, i32* %out_0_addr, align 4" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 55 'store' <Predicate = (trunc_ln26 == 0)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "br label %2" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 56 'br' <Predicate = (trunc_ln26 == 0)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (1.14ns)   --->   "store i32 %y, i32* %out_2_addr, align 4" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 57 'store' <Predicate = (trunc_ln26 != 0 & trunc_ln26 != 1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "br label %2" [arrpartcyclic_lec8Ex1.c:26]   --->   Operation 58 'br' <Predicate = (trunc_ln26 != 0 & trunc_ln26 != 1)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.18ns)   --->   "%add_ln17_1 = add i6 %phi_urem, 1" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 59 'add' 'add_ln17_1' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.90ns)   --->   "%icmp_ln17_1 = icmp ult i6 %add_ln17_1, 3" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 60 'icmp' 'icmp_ln17_1' <Predicate = true> <Delay = 0.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.52ns)   --->   "%select_ln17 = select i1 %icmp_ln17_1, i6 %add_ln17_1, i6 0" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 61 'select' 'select_ln17' <Predicate = true> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "br label %1" [arrpartcyclic_lec8Ex1.c:17]   --->   Operation 62 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.49ns
The critical path consists of the following:
	wire read on port 'c' (arrpartcyclic_lec8Ex1.c:4) [18]  (0 ns)
	'mul' operation ('res', arrpartcyclic_lec8Ex1.c:34->arrpartcyclic_lec8Ex1.c:24) [23]  (5.49 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'phi' operation ('phi_mul', arrpartcyclic_lec8Ex1.c:26) with incoming values : ('add_ln26', arrpartcyclic_lec8Ex1.c:26) [29]  (0 ns)
	'add' operation ('add_ln26', arrpartcyclic_lec8Ex1.c:26) [49]  (1.35 ns)

 <State 3>: 7.13ns
The critical path consists of the following:
	'load' operation ('in_1_load', arrpartcyclic_lec8Ex1.c:19) on array 'in_1' [42]  (1.15 ns)
	'select' operation ('x', arrpartcyclic_lec8Ex1.c:19) [44]  (0.492 ns)
	'mul' operation ('mul_ln24', arrpartcyclic_lec8Ex1.c:24) [45]  (5.49 ns)

 <State 4>: 3.41ns
The critical path consists of the following:
	'add' operation ('add_ln24', arrpartcyclic_lec8Ex1.c:24) [46]  (0 ns)
	'add' operation ('y', arrpartcyclic_lec8Ex1.c:24) [47]  (2.26 ns)
	'store' operation ('store_ln26', arrpartcyclic_lec8Ex1.c:26) of variable 'y', arrpartcyclic_lec8Ex1.c:24 on array 'out_1' [57]  (1.15 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
