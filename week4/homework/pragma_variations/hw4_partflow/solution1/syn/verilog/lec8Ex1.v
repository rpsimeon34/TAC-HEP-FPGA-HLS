// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lec8Ex1,hls_ip_2020_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.518000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=123,HLS_SYN_FF=0,HLS_SYN_LUT=3684,HLS_VERSION=2020_1}" *)

module lec8Ex1 (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_0,
        in_1,
        in_2,
        in_3,
        in_4,
        in_5,
        in_6,
        in_7,
        in_8,
        in_9,
        in_10,
        in_11,
        in_12,
        in_13,
        in_14,
        in_15,
        in_16,
        in_17,
        in_18,
        in_19,
        in_20,
        in_21,
        in_22,
        in_23,
        in_24,
        in_25,
        in_26,
        in_27,
        in_28,
        in_29,
        in_30,
        in_31,
        in_32,
        in_33,
        in_34,
        in_35,
        in_36,
        in_37,
        in_38,
        in_39,
        in_40,
        in_41,
        in_42,
        in_43,
        in_44,
        in_45,
        in_46,
        in_47,
        in_48,
        in_49,
        in_50,
        in_51,
        in_52,
        in_53,
        in_54,
        in_55,
        in_56,
        in_57,
        in_58,
        in_59,
        a,
        b,
        c,
        out_0,
        out_0_ap_vld,
        out_1,
        out_1_ap_vld,
        out_2,
        out_2_ap_vld,
        out_3,
        out_3_ap_vld,
        out_4,
        out_4_ap_vld,
        out_5,
        out_5_ap_vld,
        out_6,
        out_6_ap_vld,
        out_7,
        out_7_ap_vld,
        out_8,
        out_8_ap_vld,
        out_9,
        out_9_ap_vld,
        out_10,
        out_10_ap_vld,
        out_11,
        out_11_ap_vld,
        out_12,
        out_12_ap_vld,
        out_13,
        out_13_ap_vld,
        out_14,
        out_14_ap_vld,
        out_15,
        out_15_ap_vld,
        out_16,
        out_16_ap_vld,
        out_17,
        out_17_ap_vld,
        out_18,
        out_18_ap_vld,
        out_19,
        out_19_ap_vld,
        out_20,
        out_20_ap_vld,
        out_21,
        out_21_ap_vld,
        out_22,
        out_22_ap_vld,
        out_23,
        out_23_ap_vld,
        out_24,
        out_24_ap_vld,
        out_25,
        out_25_ap_vld,
        out_26,
        out_26_ap_vld,
        out_27,
        out_27_ap_vld,
        out_28,
        out_28_ap_vld,
        out_29,
        out_29_ap_vld,
        out_30,
        out_30_ap_vld,
        out_31,
        out_31_ap_vld,
        out_32,
        out_32_ap_vld,
        out_33,
        out_33_ap_vld,
        out_34,
        out_34_ap_vld,
        out_35,
        out_35_ap_vld,
        out_36,
        out_36_ap_vld,
        out_37,
        out_37_ap_vld,
        out_38,
        out_38_ap_vld,
        out_39,
        out_39_ap_vld,
        out_40,
        out_40_ap_vld,
        out_41,
        out_41_ap_vld,
        out_42,
        out_42_ap_vld,
        out_43,
        out_43_ap_vld,
        out_44,
        out_44_ap_vld,
        out_45,
        out_45_ap_vld,
        out_46,
        out_46_ap_vld,
        out_47,
        out_47_ap_vld,
        out_48,
        out_48_ap_vld,
        out_49,
        out_49_ap_vld,
        out_50,
        out_50_ap_vld,
        out_51,
        out_51_ap_vld,
        out_52,
        out_52_ap_vld,
        out_53,
        out_53_ap_vld,
        out_54,
        out_54_ap_vld,
        out_55,
        out_55_ap_vld,
        out_56,
        out_56_ap_vld,
        out_57,
        out_57_ap_vld,
        out_58,
        out_58_ap_vld,
        out_59,
        out_59_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_0;
input  [31:0] in_1;
input  [31:0] in_2;
input  [31:0] in_3;
input  [31:0] in_4;
input  [31:0] in_5;
input  [31:0] in_6;
input  [31:0] in_7;
input  [31:0] in_8;
input  [31:0] in_9;
input  [31:0] in_10;
input  [31:0] in_11;
input  [31:0] in_12;
input  [31:0] in_13;
input  [31:0] in_14;
input  [31:0] in_15;
input  [31:0] in_16;
input  [31:0] in_17;
input  [31:0] in_18;
input  [31:0] in_19;
input  [31:0] in_20;
input  [31:0] in_21;
input  [31:0] in_22;
input  [31:0] in_23;
input  [31:0] in_24;
input  [31:0] in_25;
input  [31:0] in_26;
input  [31:0] in_27;
input  [31:0] in_28;
input  [31:0] in_29;
input  [31:0] in_30;
input  [31:0] in_31;
input  [31:0] in_32;
input  [31:0] in_33;
input  [31:0] in_34;
input  [31:0] in_35;
input  [31:0] in_36;
input  [31:0] in_37;
input  [31:0] in_38;
input  [31:0] in_39;
input  [31:0] in_40;
input  [31:0] in_41;
input  [31:0] in_42;
input  [31:0] in_43;
input  [31:0] in_44;
input  [31:0] in_45;
input  [31:0] in_46;
input  [31:0] in_47;
input  [31:0] in_48;
input  [31:0] in_49;
input  [31:0] in_50;
input  [31:0] in_51;
input  [31:0] in_52;
input  [31:0] in_53;
input  [31:0] in_54;
input  [31:0] in_55;
input  [31:0] in_56;
input  [31:0] in_57;
input  [31:0] in_58;
input  [31:0] in_59;
input  [15:0] a;
input  [15:0] b;
input  [31:0] c;
output  [31:0] out_0;
output   out_0_ap_vld;
output  [31:0] out_1;
output   out_1_ap_vld;
output  [31:0] out_2;
output   out_2_ap_vld;
output  [31:0] out_3;
output   out_3_ap_vld;
output  [31:0] out_4;
output   out_4_ap_vld;
output  [31:0] out_5;
output   out_5_ap_vld;
output  [31:0] out_6;
output   out_6_ap_vld;
output  [31:0] out_7;
output   out_7_ap_vld;
output  [31:0] out_8;
output   out_8_ap_vld;
output  [31:0] out_9;
output   out_9_ap_vld;
output  [31:0] out_10;
output   out_10_ap_vld;
output  [31:0] out_11;
output   out_11_ap_vld;
output  [31:0] out_12;
output   out_12_ap_vld;
output  [31:0] out_13;
output   out_13_ap_vld;
output  [31:0] out_14;
output   out_14_ap_vld;
output  [31:0] out_15;
output   out_15_ap_vld;
output  [31:0] out_16;
output   out_16_ap_vld;
output  [31:0] out_17;
output   out_17_ap_vld;
output  [31:0] out_18;
output   out_18_ap_vld;
output  [31:0] out_19;
output   out_19_ap_vld;
output  [31:0] out_20;
output   out_20_ap_vld;
output  [31:0] out_21;
output   out_21_ap_vld;
output  [31:0] out_22;
output   out_22_ap_vld;
output  [31:0] out_23;
output   out_23_ap_vld;
output  [31:0] out_24;
output   out_24_ap_vld;
output  [31:0] out_25;
output   out_25_ap_vld;
output  [31:0] out_26;
output   out_26_ap_vld;
output  [31:0] out_27;
output   out_27_ap_vld;
output  [31:0] out_28;
output   out_28_ap_vld;
output  [31:0] out_29;
output   out_29_ap_vld;
output  [31:0] out_30;
output   out_30_ap_vld;
output  [31:0] out_31;
output   out_31_ap_vld;
output  [31:0] out_32;
output   out_32_ap_vld;
output  [31:0] out_33;
output   out_33_ap_vld;
output  [31:0] out_34;
output   out_34_ap_vld;
output  [31:0] out_35;
output   out_35_ap_vld;
output  [31:0] out_36;
output   out_36_ap_vld;
output  [31:0] out_37;
output   out_37_ap_vld;
output  [31:0] out_38;
output   out_38_ap_vld;
output  [31:0] out_39;
output   out_39_ap_vld;
output  [31:0] out_40;
output   out_40_ap_vld;
output  [31:0] out_41;
output   out_41_ap_vld;
output  [31:0] out_42;
output   out_42_ap_vld;
output  [31:0] out_43;
output   out_43_ap_vld;
output  [31:0] out_44;
output   out_44_ap_vld;
output  [31:0] out_45;
output   out_45_ap_vld;
output  [31:0] out_46;
output   out_46_ap_vld;
output  [31:0] out_47;
output   out_47_ap_vld;
output  [31:0] out_48;
output   out_48_ap_vld;
output  [31:0] out_49;
output   out_49_ap_vld;
output  [31:0] out_50;
output   out_50_ap_vld;
output  [31:0] out_51;
output   out_51_ap_vld;
output  [31:0] out_52;
output   out_52_ap_vld;
output  [31:0] out_53;
output   out_53_ap_vld;
output  [31:0] out_54;
output   out_54_ap_vld;
output  [31:0] out_55;
output   out_55_ap_vld;
output  [31:0] out_56;
output   out_56_ap_vld;
output  [31:0] out_57;
output   out_57_ap_vld;
output  [31:0] out_58;
output   out_58_ap_vld;
output  [31:0] out_59;
output   out_59_ap_vld;

reg out_0_ap_vld;
reg out_1_ap_vld;
reg out_2_ap_vld;
reg out_3_ap_vld;
reg out_4_ap_vld;
reg out_5_ap_vld;
reg out_6_ap_vld;
reg out_7_ap_vld;
reg out_8_ap_vld;
reg out_9_ap_vld;
reg out_10_ap_vld;
reg out_11_ap_vld;
reg out_12_ap_vld;
reg out_13_ap_vld;
reg out_14_ap_vld;
reg out_15_ap_vld;
reg out_16_ap_vld;
reg out_17_ap_vld;
reg out_18_ap_vld;
reg out_19_ap_vld;
reg out_20_ap_vld;
reg out_21_ap_vld;
reg out_22_ap_vld;
reg out_23_ap_vld;
reg out_24_ap_vld;
reg out_25_ap_vld;
reg out_26_ap_vld;
reg out_27_ap_vld;
reg out_28_ap_vld;
reg out_29_ap_vld;
reg out_30_ap_vld;
reg out_31_ap_vld;
reg out_32_ap_vld;
reg out_33_ap_vld;
reg out_34_ap_vld;
reg out_35_ap_vld;
reg out_36_ap_vld;
reg out_37_ap_vld;
reg out_38_ap_vld;
reg out_39_ap_vld;
reg out_40_ap_vld;
reg out_41_ap_vld;
reg out_42_ap_vld;
reg out_43_ap_vld;
reg out_44_ap_vld;
reg out_45_ap_vld;
reg out_46_ap_vld;
reg out_47_ap_vld;
reg out_48_ap_vld;
reg out_49_ap_vld;
reg out_50_ap_vld;
reg out_51_ap_vld;
reg out_52_ap_vld;
reg out_53_ap_vld;
reg out_54_ap_vld;
reg out_55_ap_vld;
reg out_56_ap_vld;
reg out_57_ap_vld;
reg out_58_ap_vld;
reg out_59_ap_vld;

wire  signed [31:0] mul_ln24_fu_1068_p0;
wire  signed [15:0] mul_ln24_fu_1068_p1;
wire  signed [31:0] sext_ln24_fu_1060_p1;
wire  signed [31:0] mul_ln34_fu_1074_p0;
wire  signed [31:0] mul_ln34_fu_1074_p1;
wire  signed [16:0] sext_ln19_fu_1064_p1;
wire   [16:0] add_ln24_fu_1080_p2;
wire  signed [31:0] sext_ln24_1_fu_1086_p1;
wire   [31:0] mul_ln34_fu_1074_p2;
wire   [31:0] add_ln24_1_fu_1090_p2;
wire   [31:0] mul_ln24_fu_1068_p2;
wire  signed [31:0] mul_ln24_1_fu_1103_p0;
wire  signed [15:0] mul_ln24_1_fu_1103_p1;
wire   [31:0] mul_ln24_1_fu_1103_p2;
wire  signed [31:0] mul_ln24_2_fu_1116_p0;
wire  signed [15:0] mul_ln24_2_fu_1116_p1;
wire   [31:0] mul_ln24_2_fu_1116_p2;
wire  signed [31:0] mul_ln24_3_fu_1129_p0;
wire  signed [15:0] mul_ln24_3_fu_1129_p1;
wire   [31:0] mul_ln24_3_fu_1129_p2;
wire  signed [31:0] mul_ln24_4_fu_1142_p0;
wire  signed [15:0] mul_ln24_4_fu_1142_p1;
wire   [31:0] mul_ln24_4_fu_1142_p2;
wire  signed [31:0] mul_ln24_5_fu_1155_p0;
wire  signed [15:0] mul_ln24_5_fu_1155_p1;
wire   [31:0] mul_ln24_5_fu_1155_p2;
wire  signed [31:0] mul_ln24_6_fu_1168_p0;
wire  signed [15:0] mul_ln24_6_fu_1168_p1;
wire   [31:0] mul_ln24_6_fu_1168_p2;
wire  signed [31:0] mul_ln24_7_fu_1181_p0;
wire  signed [15:0] mul_ln24_7_fu_1181_p1;
wire   [31:0] mul_ln24_7_fu_1181_p2;
wire  signed [31:0] mul_ln24_8_fu_1194_p0;
wire  signed [15:0] mul_ln24_8_fu_1194_p1;
wire   [31:0] mul_ln24_8_fu_1194_p2;
wire  signed [31:0] mul_ln24_9_fu_1207_p0;
wire  signed [15:0] mul_ln24_9_fu_1207_p1;
wire   [31:0] mul_ln24_9_fu_1207_p2;
wire  signed [31:0] mul_ln24_10_fu_1220_p0;
wire  signed [15:0] mul_ln24_10_fu_1220_p1;
wire   [31:0] mul_ln24_10_fu_1220_p2;
wire  signed [31:0] mul_ln24_11_fu_1233_p0;
wire  signed [15:0] mul_ln24_11_fu_1233_p1;
wire   [31:0] mul_ln24_11_fu_1233_p2;
wire  signed [31:0] mul_ln24_12_fu_1246_p0;
wire  signed [15:0] mul_ln24_12_fu_1246_p1;
wire   [31:0] mul_ln24_12_fu_1246_p2;
wire  signed [31:0] mul_ln24_13_fu_1259_p0;
wire  signed [15:0] mul_ln24_13_fu_1259_p1;
wire   [31:0] mul_ln24_13_fu_1259_p2;
wire  signed [31:0] mul_ln24_14_fu_1272_p0;
wire  signed [15:0] mul_ln24_14_fu_1272_p1;
wire   [31:0] mul_ln24_14_fu_1272_p2;
wire  signed [31:0] mul_ln24_15_fu_1285_p0;
wire  signed [15:0] mul_ln24_15_fu_1285_p1;
wire   [31:0] mul_ln24_15_fu_1285_p2;
wire  signed [31:0] mul_ln24_16_fu_1298_p0;
wire  signed [15:0] mul_ln24_16_fu_1298_p1;
wire   [31:0] mul_ln24_16_fu_1298_p2;
wire  signed [31:0] mul_ln24_17_fu_1311_p0;
wire  signed [15:0] mul_ln24_17_fu_1311_p1;
wire   [31:0] mul_ln24_17_fu_1311_p2;
wire  signed [31:0] mul_ln24_18_fu_1324_p0;
wire  signed [15:0] mul_ln24_18_fu_1324_p1;
wire   [31:0] mul_ln24_18_fu_1324_p2;
wire  signed [31:0] mul_ln24_19_fu_1337_p0;
wire  signed [15:0] mul_ln24_19_fu_1337_p1;
wire   [31:0] mul_ln24_19_fu_1337_p2;
wire  signed [31:0] mul_ln24_20_fu_1350_p0;
wire  signed [15:0] mul_ln24_20_fu_1350_p1;
wire   [31:0] mul_ln24_20_fu_1350_p2;
wire  signed [31:0] mul_ln24_21_fu_1363_p0;
wire  signed [15:0] mul_ln24_21_fu_1363_p1;
wire   [31:0] mul_ln24_21_fu_1363_p2;
wire  signed [31:0] mul_ln24_22_fu_1376_p0;
wire  signed [15:0] mul_ln24_22_fu_1376_p1;
wire   [31:0] mul_ln24_22_fu_1376_p2;
wire  signed [31:0] mul_ln24_23_fu_1389_p0;
wire  signed [15:0] mul_ln24_23_fu_1389_p1;
wire   [31:0] mul_ln24_23_fu_1389_p2;
wire  signed [31:0] mul_ln24_24_fu_1402_p0;
wire  signed [15:0] mul_ln24_24_fu_1402_p1;
wire   [31:0] mul_ln24_24_fu_1402_p2;
wire  signed [31:0] mul_ln24_25_fu_1415_p0;
wire  signed [15:0] mul_ln24_25_fu_1415_p1;
wire   [31:0] mul_ln24_25_fu_1415_p2;
wire  signed [31:0] mul_ln24_26_fu_1428_p0;
wire  signed [15:0] mul_ln24_26_fu_1428_p1;
wire   [31:0] mul_ln24_26_fu_1428_p2;
wire  signed [31:0] mul_ln24_27_fu_1441_p0;
wire  signed [15:0] mul_ln24_27_fu_1441_p1;
wire   [31:0] mul_ln24_27_fu_1441_p2;
wire  signed [31:0] mul_ln24_28_fu_1454_p0;
wire  signed [15:0] mul_ln24_28_fu_1454_p1;
wire   [31:0] mul_ln24_28_fu_1454_p2;
wire  signed [31:0] mul_ln24_29_fu_1467_p0;
wire  signed [15:0] mul_ln24_29_fu_1467_p1;
wire   [31:0] mul_ln24_29_fu_1467_p2;
wire  signed [31:0] mul_ln24_30_fu_1480_p0;
wire  signed [15:0] mul_ln24_30_fu_1480_p1;
wire   [31:0] mul_ln24_30_fu_1480_p2;
wire  signed [31:0] mul_ln24_31_fu_1493_p0;
wire  signed [15:0] mul_ln24_31_fu_1493_p1;
wire   [31:0] mul_ln24_31_fu_1493_p2;
wire  signed [31:0] mul_ln24_32_fu_1506_p0;
wire  signed [15:0] mul_ln24_32_fu_1506_p1;
wire   [31:0] mul_ln24_32_fu_1506_p2;
wire  signed [31:0] mul_ln24_33_fu_1519_p0;
wire  signed [15:0] mul_ln24_33_fu_1519_p1;
wire   [31:0] mul_ln24_33_fu_1519_p2;
wire  signed [31:0] mul_ln24_34_fu_1532_p0;
wire  signed [15:0] mul_ln24_34_fu_1532_p1;
wire   [31:0] mul_ln24_34_fu_1532_p2;
wire  signed [31:0] mul_ln24_35_fu_1545_p0;
wire  signed [15:0] mul_ln24_35_fu_1545_p1;
wire   [31:0] mul_ln24_35_fu_1545_p2;
wire  signed [31:0] mul_ln24_36_fu_1558_p0;
wire  signed [15:0] mul_ln24_36_fu_1558_p1;
wire   [31:0] mul_ln24_36_fu_1558_p2;
wire  signed [31:0] mul_ln24_37_fu_1571_p0;
wire  signed [15:0] mul_ln24_37_fu_1571_p1;
wire   [31:0] mul_ln24_37_fu_1571_p2;
wire  signed [31:0] mul_ln24_38_fu_1584_p0;
wire  signed [15:0] mul_ln24_38_fu_1584_p1;
wire   [31:0] mul_ln24_38_fu_1584_p2;
wire  signed [31:0] mul_ln24_39_fu_1597_p0;
wire  signed [15:0] mul_ln24_39_fu_1597_p1;
wire   [31:0] mul_ln24_39_fu_1597_p2;
wire  signed [31:0] mul_ln24_40_fu_1610_p0;
wire  signed [15:0] mul_ln24_40_fu_1610_p1;
wire   [31:0] mul_ln24_40_fu_1610_p2;
wire  signed [31:0] mul_ln24_41_fu_1623_p0;
wire  signed [15:0] mul_ln24_41_fu_1623_p1;
wire   [31:0] mul_ln24_41_fu_1623_p2;
wire  signed [31:0] mul_ln24_42_fu_1636_p0;
wire  signed [15:0] mul_ln24_42_fu_1636_p1;
wire   [31:0] mul_ln24_42_fu_1636_p2;
wire  signed [31:0] mul_ln24_43_fu_1649_p0;
wire  signed [15:0] mul_ln24_43_fu_1649_p1;
wire   [31:0] mul_ln24_43_fu_1649_p2;
wire  signed [31:0] mul_ln24_44_fu_1662_p0;
wire  signed [15:0] mul_ln24_44_fu_1662_p1;
wire   [31:0] mul_ln24_44_fu_1662_p2;
wire  signed [31:0] mul_ln24_45_fu_1675_p0;
wire  signed [15:0] mul_ln24_45_fu_1675_p1;
wire   [31:0] mul_ln24_45_fu_1675_p2;
wire  signed [31:0] mul_ln24_46_fu_1688_p0;
wire  signed [15:0] mul_ln24_46_fu_1688_p1;
wire   [31:0] mul_ln24_46_fu_1688_p2;
wire  signed [31:0] mul_ln24_47_fu_1701_p0;
wire  signed [15:0] mul_ln24_47_fu_1701_p1;
wire   [31:0] mul_ln24_47_fu_1701_p2;
wire  signed [31:0] mul_ln24_48_fu_1714_p0;
wire  signed [15:0] mul_ln24_48_fu_1714_p1;
wire   [31:0] mul_ln24_48_fu_1714_p2;
wire  signed [31:0] mul_ln24_49_fu_1727_p0;
wire  signed [15:0] mul_ln24_49_fu_1727_p1;
wire   [31:0] mul_ln24_49_fu_1727_p2;
wire  signed [31:0] mul_ln24_50_fu_1740_p0;
wire  signed [15:0] mul_ln24_50_fu_1740_p1;
wire   [31:0] mul_ln24_50_fu_1740_p2;
wire  signed [31:0] mul_ln24_51_fu_1753_p0;
wire  signed [15:0] mul_ln24_51_fu_1753_p1;
wire   [31:0] mul_ln24_51_fu_1753_p2;
wire  signed [31:0] mul_ln24_52_fu_1766_p0;
wire  signed [15:0] mul_ln24_52_fu_1766_p1;
wire   [31:0] mul_ln24_52_fu_1766_p2;
wire  signed [31:0] mul_ln24_53_fu_1779_p0;
wire  signed [15:0] mul_ln24_53_fu_1779_p1;
wire   [31:0] mul_ln24_53_fu_1779_p2;
wire  signed [31:0] mul_ln24_54_fu_1792_p0;
wire  signed [15:0] mul_ln24_54_fu_1792_p1;
wire   [31:0] mul_ln24_54_fu_1792_p2;
wire  signed [31:0] mul_ln24_55_fu_1805_p0;
wire  signed [15:0] mul_ln24_55_fu_1805_p1;
wire   [31:0] mul_ln24_55_fu_1805_p2;
wire  signed [31:0] mul_ln24_56_fu_1818_p0;
wire  signed [15:0] mul_ln24_56_fu_1818_p1;
wire   [31:0] mul_ln24_56_fu_1818_p2;
wire  signed [31:0] mul_ln24_57_fu_1831_p0;
wire  signed [15:0] mul_ln24_57_fu_1831_p1;
wire   [31:0] mul_ln24_57_fu_1831_p2;
wire  signed [31:0] mul_ln24_58_fu_1844_p0;
wire  signed [15:0] mul_ln24_58_fu_1844_p1;
wire   [31:0] mul_ln24_58_fu_1844_p2;
wire  signed [31:0] mul_ln24_59_fu_1857_p0;
wire  signed [15:0] mul_ln24_59_fu_1857_p1;
wire   [31:0] mul_ln24_59_fu_1857_p2;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_0_ap_vld = 1'b1;
    end else begin
        out_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_10_ap_vld = 1'b1;
    end else begin
        out_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_11_ap_vld = 1'b1;
    end else begin
        out_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_12_ap_vld = 1'b1;
    end else begin
        out_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_13_ap_vld = 1'b1;
    end else begin
        out_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_14_ap_vld = 1'b1;
    end else begin
        out_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_15_ap_vld = 1'b1;
    end else begin
        out_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_16_ap_vld = 1'b1;
    end else begin
        out_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_17_ap_vld = 1'b1;
    end else begin
        out_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_18_ap_vld = 1'b1;
    end else begin
        out_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_19_ap_vld = 1'b1;
    end else begin
        out_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_1_ap_vld = 1'b1;
    end else begin
        out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_20_ap_vld = 1'b1;
    end else begin
        out_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_21_ap_vld = 1'b1;
    end else begin
        out_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_22_ap_vld = 1'b1;
    end else begin
        out_22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_23_ap_vld = 1'b1;
    end else begin
        out_23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_24_ap_vld = 1'b1;
    end else begin
        out_24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_25_ap_vld = 1'b1;
    end else begin
        out_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_26_ap_vld = 1'b1;
    end else begin
        out_26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_27_ap_vld = 1'b1;
    end else begin
        out_27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_28_ap_vld = 1'b1;
    end else begin
        out_28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_29_ap_vld = 1'b1;
    end else begin
        out_29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_2_ap_vld = 1'b1;
    end else begin
        out_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_30_ap_vld = 1'b1;
    end else begin
        out_30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_31_ap_vld = 1'b1;
    end else begin
        out_31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_32_ap_vld = 1'b1;
    end else begin
        out_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_33_ap_vld = 1'b1;
    end else begin
        out_33_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_34_ap_vld = 1'b1;
    end else begin
        out_34_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_35_ap_vld = 1'b1;
    end else begin
        out_35_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_36_ap_vld = 1'b1;
    end else begin
        out_36_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_37_ap_vld = 1'b1;
    end else begin
        out_37_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_38_ap_vld = 1'b1;
    end else begin
        out_38_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_39_ap_vld = 1'b1;
    end else begin
        out_39_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_3_ap_vld = 1'b1;
    end else begin
        out_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_40_ap_vld = 1'b1;
    end else begin
        out_40_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_41_ap_vld = 1'b1;
    end else begin
        out_41_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_42_ap_vld = 1'b1;
    end else begin
        out_42_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_43_ap_vld = 1'b1;
    end else begin
        out_43_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_44_ap_vld = 1'b1;
    end else begin
        out_44_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_45_ap_vld = 1'b1;
    end else begin
        out_45_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_46_ap_vld = 1'b1;
    end else begin
        out_46_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_47_ap_vld = 1'b1;
    end else begin
        out_47_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_48_ap_vld = 1'b1;
    end else begin
        out_48_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_49_ap_vld = 1'b1;
    end else begin
        out_49_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_4_ap_vld = 1'b1;
    end else begin
        out_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_50_ap_vld = 1'b1;
    end else begin
        out_50_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_51_ap_vld = 1'b1;
    end else begin
        out_51_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_52_ap_vld = 1'b1;
    end else begin
        out_52_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_53_ap_vld = 1'b1;
    end else begin
        out_53_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_54_ap_vld = 1'b1;
    end else begin
        out_54_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_55_ap_vld = 1'b1;
    end else begin
        out_55_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_56_ap_vld = 1'b1;
    end else begin
        out_56_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_57_ap_vld = 1'b1;
    end else begin
        out_57_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_58_ap_vld = 1'b1;
    end else begin
        out_58_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_59_ap_vld = 1'b1;
    end else begin
        out_59_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_5_ap_vld = 1'b1;
    end else begin
        out_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_6_ap_vld = 1'b1;
    end else begin
        out_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_7_ap_vld = 1'b1;
    end else begin
        out_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_8_ap_vld = 1'b1;
    end else begin
        out_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        out_9_ap_vld = 1'b1;
    end else begin
        out_9_ap_vld = 1'b0;
    end
end

assign add_ln24_1_fu_1090_p2 = ($signed(sext_ln24_1_fu_1086_p1) + $signed(mul_ln34_fu_1074_p2));

assign add_ln24_fu_1080_p2 = ($signed(sext_ln19_fu_1064_p1) + $signed(17'd39));

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign mul_ln24_10_fu_1220_p0 = in_10;

assign mul_ln24_10_fu_1220_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_10_fu_1220_p2 = ($signed(mul_ln24_10_fu_1220_p0) * $signed(mul_ln24_10_fu_1220_p1));

assign mul_ln24_11_fu_1233_p0 = in_11;

assign mul_ln24_11_fu_1233_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_11_fu_1233_p2 = ($signed(mul_ln24_11_fu_1233_p0) * $signed(mul_ln24_11_fu_1233_p1));

assign mul_ln24_12_fu_1246_p0 = in_12;

assign mul_ln24_12_fu_1246_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_12_fu_1246_p2 = ($signed(mul_ln24_12_fu_1246_p0) * $signed(mul_ln24_12_fu_1246_p1));

assign mul_ln24_13_fu_1259_p0 = in_13;

assign mul_ln24_13_fu_1259_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_13_fu_1259_p2 = ($signed(mul_ln24_13_fu_1259_p0) * $signed(mul_ln24_13_fu_1259_p1));

assign mul_ln24_14_fu_1272_p0 = in_14;

assign mul_ln24_14_fu_1272_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_14_fu_1272_p2 = ($signed(mul_ln24_14_fu_1272_p0) * $signed(mul_ln24_14_fu_1272_p1));

assign mul_ln24_15_fu_1285_p0 = in_15;

assign mul_ln24_15_fu_1285_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_15_fu_1285_p2 = ($signed(mul_ln24_15_fu_1285_p0) * $signed(mul_ln24_15_fu_1285_p1));

assign mul_ln24_16_fu_1298_p0 = in_16;

assign mul_ln24_16_fu_1298_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_16_fu_1298_p2 = ($signed(mul_ln24_16_fu_1298_p0) * $signed(mul_ln24_16_fu_1298_p1));

assign mul_ln24_17_fu_1311_p0 = in_17;

assign mul_ln24_17_fu_1311_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_17_fu_1311_p2 = ($signed(mul_ln24_17_fu_1311_p0) * $signed(mul_ln24_17_fu_1311_p1));

assign mul_ln24_18_fu_1324_p0 = in_18;

assign mul_ln24_18_fu_1324_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_18_fu_1324_p2 = ($signed(mul_ln24_18_fu_1324_p0) * $signed(mul_ln24_18_fu_1324_p1));

assign mul_ln24_19_fu_1337_p0 = in_19;

assign mul_ln24_19_fu_1337_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_19_fu_1337_p2 = ($signed(mul_ln24_19_fu_1337_p0) * $signed(mul_ln24_19_fu_1337_p1));

assign mul_ln24_1_fu_1103_p0 = in_1;

assign mul_ln24_1_fu_1103_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_1_fu_1103_p2 = ($signed(mul_ln24_1_fu_1103_p0) * $signed(mul_ln24_1_fu_1103_p1));

assign mul_ln24_20_fu_1350_p0 = in_20;

assign mul_ln24_20_fu_1350_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_20_fu_1350_p2 = ($signed(mul_ln24_20_fu_1350_p0) * $signed(mul_ln24_20_fu_1350_p1));

assign mul_ln24_21_fu_1363_p0 = in_21;

assign mul_ln24_21_fu_1363_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_21_fu_1363_p2 = ($signed(mul_ln24_21_fu_1363_p0) * $signed(mul_ln24_21_fu_1363_p1));

assign mul_ln24_22_fu_1376_p0 = in_22;

assign mul_ln24_22_fu_1376_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_22_fu_1376_p2 = ($signed(mul_ln24_22_fu_1376_p0) * $signed(mul_ln24_22_fu_1376_p1));

assign mul_ln24_23_fu_1389_p0 = in_23;

assign mul_ln24_23_fu_1389_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_23_fu_1389_p2 = ($signed(mul_ln24_23_fu_1389_p0) * $signed(mul_ln24_23_fu_1389_p1));

assign mul_ln24_24_fu_1402_p0 = in_24;

assign mul_ln24_24_fu_1402_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_24_fu_1402_p2 = ($signed(mul_ln24_24_fu_1402_p0) * $signed(mul_ln24_24_fu_1402_p1));

assign mul_ln24_25_fu_1415_p0 = in_25;

assign mul_ln24_25_fu_1415_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_25_fu_1415_p2 = ($signed(mul_ln24_25_fu_1415_p0) * $signed(mul_ln24_25_fu_1415_p1));

assign mul_ln24_26_fu_1428_p0 = in_26;

assign mul_ln24_26_fu_1428_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_26_fu_1428_p2 = ($signed(mul_ln24_26_fu_1428_p0) * $signed(mul_ln24_26_fu_1428_p1));

assign mul_ln24_27_fu_1441_p0 = in_27;

assign mul_ln24_27_fu_1441_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_27_fu_1441_p2 = ($signed(mul_ln24_27_fu_1441_p0) * $signed(mul_ln24_27_fu_1441_p1));

assign mul_ln24_28_fu_1454_p0 = in_28;

assign mul_ln24_28_fu_1454_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_28_fu_1454_p2 = ($signed(mul_ln24_28_fu_1454_p0) * $signed(mul_ln24_28_fu_1454_p1));

assign mul_ln24_29_fu_1467_p0 = in_29;

assign mul_ln24_29_fu_1467_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_29_fu_1467_p2 = ($signed(mul_ln24_29_fu_1467_p0) * $signed(mul_ln24_29_fu_1467_p1));

assign mul_ln24_2_fu_1116_p0 = in_2;

assign mul_ln24_2_fu_1116_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_2_fu_1116_p2 = ($signed(mul_ln24_2_fu_1116_p0) * $signed(mul_ln24_2_fu_1116_p1));

assign mul_ln24_30_fu_1480_p0 = in_30;

assign mul_ln24_30_fu_1480_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_30_fu_1480_p2 = ($signed(mul_ln24_30_fu_1480_p0) * $signed(mul_ln24_30_fu_1480_p1));

assign mul_ln24_31_fu_1493_p0 = in_31;

assign mul_ln24_31_fu_1493_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_31_fu_1493_p2 = ($signed(mul_ln24_31_fu_1493_p0) * $signed(mul_ln24_31_fu_1493_p1));

assign mul_ln24_32_fu_1506_p0 = in_32;

assign mul_ln24_32_fu_1506_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_32_fu_1506_p2 = ($signed(mul_ln24_32_fu_1506_p0) * $signed(mul_ln24_32_fu_1506_p1));

assign mul_ln24_33_fu_1519_p0 = in_33;

assign mul_ln24_33_fu_1519_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_33_fu_1519_p2 = ($signed(mul_ln24_33_fu_1519_p0) * $signed(mul_ln24_33_fu_1519_p1));

assign mul_ln24_34_fu_1532_p0 = in_34;

assign mul_ln24_34_fu_1532_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_34_fu_1532_p2 = ($signed(mul_ln24_34_fu_1532_p0) * $signed(mul_ln24_34_fu_1532_p1));

assign mul_ln24_35_fu_1545_p0 = in_35;

assign mul_ln24_35_fu_1545_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_35_fu_1545_p2 = ($signed(mul_ln24_35_fu_1545_p0) * $signed(mul_ln24_35_fu_1545_p1));

assign mul_ln24_36_fu_1558_p0 = in_36;

assign mul_ln24_36_fu_1558_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_36_fu_1558_p2 = ($signed(mul_ln24_36_fu_1558_p0) * $signed(mul_ln24_36_fu_1558_p1));

assign mul_ln24_37_fu_1571_p0 = in_37;

assign mul_ln24_37_fu_1571_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_37_fu_1571_p2 = ($signed(mul_ln24_37_fu_1571_p0) * $signed(mul_ln24_37_fu_1571_p1));

assign mul_ln24_38_fu_1584_p0 = in_38;

assign mul_ln24_38_fu_1584_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_38_fu_1584_p2 = ($signed(mul_ln24_38_fu_1584_p0) * $signed(mul_ln24_38_fu_1584_p1));

assign mul_ln24_39_fu_1597_p0 = in_39;

assign mul_ln24_39_fu_1597_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_39_fu_1597_p2 = ($signed(mul_ln24_39_fu_1597_p0) * $signed(mul_ln24_39_fu_1597_p1));

assign mul_ln24_3_fu_1129_p0 = in_3;

assign mul_ln24_3_fu_1129_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_3_fu_1129_p2 = ($signed(mul_ln24_3_fu_1129_p0) * $signed(mul_ln24_3_fu_1129_p1));

assign mul_ln24_40_fu_1610_p0 = in_40;

assign mul_ln24_40_fu_1610_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_40_fu_1610_p2 = ($signed(mul_ln24_40_fu_1610_p0) * $signed(mul_ln24_40_fu_1610_p1));

assign mul_ln24_41_fu_1623_p0 = in_41;

assign mul_ln24_41_fu_1623_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_41_fu_1623_p2 = ($signed(mul_ln24_41_fu_1623_p0) * $signed(mul_ln24_41_fu_1623_p1));

assign mul_ln24_42_fu_1636_p0 = in_42;

assign mul_ln24_42_fu_1636_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_42_fu_1636_p2 = ($signed(mul_ln24_42_fu_1636_p0) * $signed(mul_ln24_42_fu_1636_p1));

assign mul_ln24_43_fu_1649_p0 = in_43;

assign mul_ln24_43_fu_1649_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_43_fu_1649_p2 = ($signed(mul_ln24_43_fu_1649_p0) * $signed(mul_ln24_43_fu_1649_p1));

assign mul_ln24_44_fu_1662_p0 = in_44;

assign mul_ln24_44_fu_1662_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_44_fu_1662_p2 = ($signed(mul_ln24_44_fu_1662_p0) * $signed(mul_ln24_44_fu_1662_p1));

assign mul_ln24_45_fu_1675_p0 = in_45;

assign mul_ln24_45_fu_1675_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_45_fu_1675_p2 = ($signed(mul_ln24_45_fu_1675_p0) * $signed(mul_ln24_45_fu_1675_p1));

assign mul_ln24_46_fu_1688_p0 = in_46;

assign mul_ln24_46_fu_1688_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_46_fu_1688_p2 = ($signed(mul_ln24_46_fu_1688_p0) * $signed(mul_ln24_46_fu_1688_p1));

assign mul_ln24_47_fu_1701_p0 = in_47;

assign mul_ln24_47_fu_1701_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_47_fu_1701_p2 = ($signed(mul_ln24_47_fu_1701_p0) * $signed(mul_ln24_47_fu_1701_p1));

assign mul_ln24_48_fu_1714_p0 = in_48;

assign mul_ln24_48_fu_1714_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_48_fu_1714_p2 = ($signed(mul_ln24_48_fu_1714_p0) * $signed(mul_ln24_48_fu_1714_p1));

assign mul_ln24_49_fu_1727_p0 = in_49;

assign mul_ln24_49_fu_1727_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_49_fu_1727_p2 = ($signed(mul_ln24_49_fu_1727_p0) * $signed(mul_ln24_49_fu_1727_p1));

assign mul_ln24_4_fu_1142_p0 = in_4;

assign mul_ln24_4_fu_1142_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_4_fu_1142_p2 = ($signed(mul_ln24_4_fu_1142_p0) * $signed(mul_ln24_4_fu_1142_p1));

assign mul_ln24_50_fu_1740_p0 = in_50;

assign mul_ln24_50_fu_1740_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_50_fu_1740_p2 = ($signed(mul_ln24_50_fu_1740_p0) * $signed(mul_ln24_50_fu_1740_p1));

assign mul_ln24_51_fu_1753_p0 = in_51;

assign mul_ln24_51_fu_1753_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_51_fu_1753_p2 = ($signed(mul_ln24_51_fu_1753_p0) * $signed(mul_ln24_51_fu_1753_p1));

assign mul_ln24_52_fu_1766_p0 = in_52;

assign mul_ln24_52_fu_1766_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_52_fu_1766_p2 = ($signed(mul_ln24_52_fu_1766_p0) * $signed(mul_ln24_52_fu_1766_p1));

assign mul_ln24_53_fu_1779_p0 = in_53;

assign mul_ln24_53_fu_1779_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_53_fu_1779_p2 = ($signed(mul_ln24_53_fu_1779_p0) * $signed(mul_ln24_53_fu_1779_p1));

assign mul_ln24_54_fu_1792_p0 = in_54;

assign mul_ln24_54_fu_1792_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_54_fu_1792_p2 = ($signed(mul_ln24_54_fu_1792_p0) * $signed(mul_ln24_54_fu_1792_p1));

assign mul_ln24_55_fu_1805_p0 = in_55;

assign mul_ln24_55_fu_1805_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_55_fu_1805_p2 = ($signed(mul_ln24_55_fu_1805_p0) * $signed(mul_ln24_55_fu_1805_p1));

assign mul_ln24_56_fu_1818_p0 = in_56;

assign mul_ln24_56_fu_1818_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_56_fu_1818_p2 = ($signed(mul_ln24_56_fu_1818_p0) * $signed(mul_ln24_56_fu_1818_p1));

assign mul_ln24_57_fu_1831_p0 = in_57;

assign mul_ln24_57_fu_1831_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_57_fu_1831_p2 = ($signed(mul_ln24_57_fu_1831_p0) * $signed(mul_ln24_57_fu_1831_p1));

assign mul_ln24_58_fu_1844_p0 = in_58;

assign mul_ln24_58_fu_1844_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_58_fu_1844_p2 = ($signed(mul_ln24_58_fu_1844_p0) * $signed(mul_ln24_58_fu_1844_p1));

assign mul_ln24_59_fu_1857_p0 = in_59;

assign mul_ln24_59_fu_1857_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_59_fu_1857_p2 = ($signed(mul_ln24_59_fu_1857_p0) * $signed(mul_ln24_59_fu_1857_p1));

assign mul_ln24_5_fu_1155_p0 = in_5;

assign mul_ln24_5_fu_1155_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_5_fu_1155_p2 = ($signed(mul_ln24_5_fu_1155_p0) * $signed(mul_ln24_5_fu_1155_p1));

assign mul_ln24_6_fu_1168_p0 = in_6;

assign mul_ln24_6_fu_1168_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_6_fu_1168_p2 = ($signed(mul_ln24_6_fu_1168_p0) * $signed(mul_ln24_6_fu_1168_p1));

assign mul_ln24_7_fu_1181_p0 = in_7;

assign mul_ln24_7_fu_1181_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_7_fu_1181_p2 = ($signed(mul_ln24_7_fu_1181_p0) * $signed(mul_ln24_7_fu_1181_p1));

assign mul_ln24_8_fu_1194_p0 = in_8;

assign mul_ln24_8_fu_1194_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_8_fu_1194_p2 = ($signed(mul_ln24_8_fu_1194_p0) * $signed(mul_ln24_8_fu_1194_p1));

assign mul_ln24_9_fu_1207_p0 = in_9;

assign mul_ln24_9_fu_1207_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_9_fu_1207_p2 = ($signed(mul_ln24_9_fu_1207_p0) * $signed(mul_ln24_9_fu_1207_p1));

assign mul_ln24_fu_1068_p0 = in_0;

assign mul_ln24_fu_1068_p1 = sext_ln24_fu_1060_p1;

assign mul_ln24_fu_1068_p2 = ($signed(mul_ln24_fu_1068_p0) * $signed(mul_ln24_fu_1068_p1));

assign mul_ln34_fu_1074_p0 = c;

assign mul_ln34_fu_1074_p1 = c;

assign mul_ln34_fu_1074_p2 = ($signed(mul_ln34_fu_1074_p0) * $signed(mul_ln34_fu_1074_p1));

assign out_0 = (add_ln24_1_fu_1090_p2 + mul_ln24_fu_1068_p2);

assign out_1 = (add_ln24_1_fu_1090_p2 + mul_ln24_1_fu_1103_p2);

assign out_10 = (add_ln24_1_fu_1090_p2 + mul_ln24_10_fu_1220_p2);

assign out_11 = (add_ln24_1_fu_1090_p2 + mul_ln24_11_fu_1233_p2);

assign out_12 = (add_ln24_1_fu_1090_p2 + mul_ln24_12_fu_1246_p2);

assign out_13 = (add_ln24_1_fu_1090_p2 + mul_ln24_13_fu_1259_p2);

assign out_14 = (add_ln24_1_fu_1090_p2 + mul_ln24_14_fu_1272_p2);

assign out_15 = (add_ln24_1_fu_1090_p2 + mul_ln24_15_fu_1285_p2);

assign out_16 = (add_ln24_1_fu_1090_p2 + mul_ln24_16_fu_1298_p2);

assign out_17 = (add_ln24_1_fu_1090_p2 + mul_ln24_17_fu_1311_p2);

assign out_18 = (add_ln24_1_fu_1090_p2 + mul_ln24_18_fu_1324_p2);

assign out_19 = (add_ln24_1_fu_1090_p2 + mul_ln24_19_fu_1337_p2);

assign out_2 = (add_ln24_1_fu_1090_p2 + mul_ln24_2_fu_1116_p2);

assign out_20 = (add_ln24_1_fu_1090_p2 + mul_ln24_20_fu_1350_p2);

assign out_21 = (add_ln24_1_fu_1090_p2 + mul_ln24_21_fu_1363_p2);

assign out_22 = (add_ln24_1_fu_1090_p2 + mul_ln24_22_fu_1376_p2);

assign out_23 = (add_ln24_1_fu_1090_p2 + mul_ln24_23_fu_1389_p2);

assign out_24 = (add_ln24_1_fu_1090_p2 + mul_ln24_24_fu_1402_p2);

assign out_25 = (add_ln24_1_fu_1090_p2 + mul_ln24_25_fu_1415_p2);

assign out_26 = (add_ln24_1_fu_1090_p2 + mul_ln24_26_fu_1428_p2);

assign out_27 = (add_ln24_1_fu_1090_p2 + mul_ln24_27_fu_1441_p2);

assign out_28 = (add_ln24_1_fu_1090_p2 + mul_ln24_28_fu_1454_p2);

assign out_29 = (add_ln24_1_fu_1090_p2 + mul_ln24_29_fu_1467_p2);

assign out_3 = (add_ln24_1_fu_1090_p2 + mul_ln24_3_fu_1129_p2);

assign out_30 = (add_ln24_1_fu_1090_p2 + mul_ln24_30_fu_1480_p2);

assign out_31 = (add_ln24_1_fu_1090_p2 + mul_ln24_31_fu_1493_p2);

assign out_32 = (add_ln24_1_fu_1090_p2 + mul_ln24_32_fu_1506_p2);

assign out_33 = (add_ln24_1_fu_1090_p2 + mul_ln24_33_fu_1519_p2);

assign out_34 = (add_ln24_1_fu_1090_p2 + mul_ln24_34_fu_1532_p2);

assign out_35 = (add_ln24_1_fu_1090_p2 + mul_ln24_35_fu_1545_p2);

assign out_36 = (add_ln24_1_fu_1090_p2 + mul_ln24_36_fu_1558_p2);

assign out_37 = (add_ln24_1_fu_1090_p2 + mul_ln24_37_fu_1571_p2);

assign out_38 = (add_ln24_1_fu_1090_p2 + mul_ln24_38_fu_1584_p2);

assign out_39 = (add_ln24_1_fu_1090_p2 + mul_ln24_39_fu_1597_p2);

assign out_4 = (add_ln24_1_fu_1090_p2 + mul_ln24_4_fu_1142_p2);

assign out_40 = (add_ln24_1_fu_1090_p2 + mul_ln24_40_fu_1610_p2);

assign out_41 = (add_ln24_1_fu_1090_p2 + mul_ln24_41_fu_1623_p2);

assign out_42 = (add_ln24_1_fu_1090_p2 + mul_ln24_42_fu_1636_p2);

assign out_43 = (add_ln24_1_fu_1090_p2 + mul_ln24_43_fu_1649_p2);

assign out_44 = (add_ln24_1_fu_1090_p2 + mul_ln24_44_fu_1662_p2);

assign out_45 = (add_ln24_1_fu_1090_p2 + mul_ln24_45_fu_1675_p2);

assign out_46 = (add_ln24_1_fu_1090_p2 + mul_ln24_46_fu_1688_p2);

assign out_47 = (add_ln24_1_fu_1090_p2 + mul_ln24_47_fu_1701_p2);

assign out_48 = (add_ln24_1_fu_1090_p2 + mul_ln24_48_fu_1714_p2);

assign out_49 = (add_ln24_1_fu_1090_p2 + mul_ln24_49_fu_1727_p2);

assign out_5 = (add_ln24_1_fu_1090_p2 + mul_ln24_5_fu_1155_p2);

assign out_50 = (add_ln24_1_fu_1090_p2 + mul_ln24_50_fu_1740_p2);

assign out_51 = (add_ln24_1_fu_1090_p2 + mul_ln24_51_fu_1753_p2);

assign out_52 = (add_ln24_1_fu_1090_p2 + mul_ln24_52_fu_1766_p2);

assign out_53 = (add_ln24_1_fu_1090_p2 + mul_ln24_53_fu_1779_p2);

assign out_54 = (add_ln24_1_fu_1090_p2 + mul_ln24_54_fu_1792_p2);

assign out_55 = (add_ln24_1_fu_1090_p2 + mul_ln24_55_fu_1805_p2);

assign out_56 = (add_ln24_1_fu_1090_p2 + mul_ln24_56_fu_1818_p2);

assign out_57 = (add_ln24_1_fu_1090_p2 + mul_ln24_57_fu_1831_p2);

assign out_58 = (add_ln24_1_fu_1090_p2 + mul_ln24_58_fu_1844_p2);

assign out_59 = (add_ln24_1_fu_1090_p2 + mul_ln24_59_fu_1857_p2);

assign out_6 = (add_ln24_1_fu_1090_p2 + mul_ln24_6_fu_1168_p2);

assign out_7 = (add_ln24_1_fu_1090_p2 + mul_ln24_7_fu_1181_p2);

assign out_8 = (add_ln24_1_fu_1090_p2 + mul_ln24_8_fu_1194_p2);

assign out_9 = (add_ln24_1_fu_1090_p2 + mul_ln24_9_fu_1207_p2);

assign sext_ln19_fu_1064_p1 = $signed(b);

assign sext_ln24_1_fu_1086_p1 = $signed(add_ln24_fu_1080_p2);

assign sext_ln24_fu_1060_p1 = $signed(a);

endmodule //lec8Ex1
