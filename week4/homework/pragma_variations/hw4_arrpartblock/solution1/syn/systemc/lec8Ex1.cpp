// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "lec8Ex1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic lec8Ex1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic lec8Ex1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> lec8Ex1::ap_ST_fsm_state1 = "1";
const sc_lv<4> lec8Ex1::ap_ST_fsm_state2 = "10";
const sc_lv<4> lec8Ex1::ap_ST_fsm_state3 = "100";
const sc_lv<4> lec8Ex1::ap_ST_fsm_state4 = "1000";
const sc_lv<32> lec8Ex1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> lec8Ex1::ap_const_lv32_1 = "1";
const sc_lv<1> lec8Ex1::ap_const_lv1_0 = "0";
const sc_lv<32> lec8Ex1::ap_const_lv32_2 = "10";
const sc_lv<32> lec8Ex1::ap_const_lv32_3 = "11";
const sc_lv<6> lec8Ex1::ap_const_lv6_0 = "000000";
const sc_lv<13> lec8Ex1::ap_const_lv13_0 = "0000000000000";
const sc_lv<2> lec8Ex1::ap_const_lv2_1 = "1";
const sc_lv<2> lec8Ex1::ap_const_lv2_0 = "00";
const sc_lv<17> lec8Ex1::ap_const_lv17_27 = "100111";
const sc_lv<6> lec8Ex1::ap_const_lv6_3C = "111100";
const sc_lv<6> lec8Ex1::ap_const_lv6_1 = "1";
const sc_lv<6> lec8Ex1::ap_const_lv6_1E = "11110";
const sc_lv<6> lec8Ex1::ap_const_lv6_22 = "100010";
const sc_lv<13> lec8Ex1::ap_const_lv13_67 = "1100111";
const sc_lv<32> lec8Ex1::ap_const_lv32_B = "1011";
const sc_lv<32> lec8Ex1::ap_const_lv32_C = "1100";
const sc_lv<6> lec8Ex1::ap_const_lv6_14 = "10100";
const sc_lv<1> lec8Ex1::ap_const_lv1_1 = "1";
const bool lec8Ex1::ap_const_boolean_1 = true;

lec8Ex1::lec8Ex1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln17_1_fu_290_p2);
    sensitive << ( phi_urem_reg_169 );

    SC_METHOD(thread_add_ln19_fu_223_p2);
    sensitive << ( i_0_reg_147 );

    SC_METHOD(thread_add_ln24_1_fu_195_p2);
    sensitive << ( sext_ln34_fu_185_p1 );

    SC_METHOD(thread_add_ln24_fu_271_p2);
    sensitive << ( res_reg_315 );
    sensitive << ( mul_ln24_reg_357 );

    SC_METHOD(thread_add_ln26_fu_243_p2);
    sensitive << ( phi_mul_reg_158 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_205_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_205_p2 );

    SC_METHOD(thread_i_fu_211_p2);
    sensitive << ( i_0_reg_147 );

    SC_METHOD(thread_icmp_ln17_1_fu_296_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( add_ln17_1_fu_290_p2 );

    SC_METHOD(thread_icmp_ln17_fu_205_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_147 );

    SC_METHOD(thread_icmp_ln19_fu_217_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_205_p2 );
    sensitive << ( i_0_reg_147 );

    SC_METHOD(thread_in_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln19_fu_237_p1 );

    SC_METHOD(thread_in_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_in_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln19_fu_237_p1 );

    SC_METHOD(thread_in_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln24_fu_266_p0);
    sensitive << ( sext_ln24_reg_310 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_mul_ln24_fu_266_p2);
    sensitive << ( mul_ln24_fu_266_p0 );
    sensitive << ( x_fu_259_p3 );

    SC_METHOD(thread_out_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln26_fu_283_p1 );

    SC_METHOD(thread_out_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_0_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_fu_275_p2 );

    SC_METHOD(thread_out_0_we0);
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln26_fu_283_p1 );

    SC_METHOD(thread_out_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_1_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_fu_275_p2 );

    SC_METHOD(thread_out_1_we0);
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln26_fu_283_p1 );

    SC_METHOD(thread_out_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_2_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_fu_275_p2 );

    SC_METHOD(thread_out_2_we0);
    sensitive << ( tmp_reg_353 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_fu_189_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c );

    SC_METHOD(thread_res_fu_189_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( c );

    SC_METHOD(thread_res_fu_189_p2);
    sensitive << ( res_fu_189_p0 );
    sensitive << ( res_fu_189_p1 );

    SC_METHOD(thread_select_ln17_fu_302_p3);
    sensitive << ( add_ln17_1_fu_290_p2 );
    sensitive << ( icmp_ln17_1_fu_296_p2 );

    SC_METHOD(thread_select_ln19_fu_229_p3);
    sensitive << ( icmp_ln19_fu_217_p2 );
    sensitive << ( i_0_reg_147 );
    sensitive << ( add_ln19_fu_223_p2 );

    SC_METHOD(thread_sext_ln24_1_fu_201_p1);
    sensitive << ( add_ln24_1_fu_195_p2 );

    SC_METHOD(thread_sext_ln24_fu_181_p1);
    sensitive << ( a );

    SC_METHOD(thread_sext_ln34_fu_185_p1);
    sensitive << ( b );

    SC_METHOD(thread_x_fu_259_p3);
    sensitive << ( in_0_q0 );
    sensitive << ( in_1_q0 );
    sensitive << ( icmp_ln19_reg_333 );

    SC_METHOD(thread_y_fu_275_p2);
    sensitive << ( sext_ln24_1_reg_320 );
    sensitive << ( add_ln24_fu_271_p2 );

    SC_METHOD(thread_zext_ln19_fu_237_p1);
    sensitive << ( select_ln19_fu_229_p3 );

    SC_METHOD(thread_zext_ln26_fu_283_p1);
    sensitive << ( phi_urem_reg_169 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_205_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "lec8Ex1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_0_address0, "(port)in_0_address0");
    sc_trace(mVcdFile, in_0_ce0, "(port)in_0_ce0");
    sc_trace(mVcdFile, in_0_q0, "(port)in_0_q0");
    sc_trace(mVcdFile, in_1_address0, "(port)in_1_address0");
    sc_trace(mVcdFile, in_1_ce0, "(port)in_1_ce0");
    sc_trace(mVcdFile, in_1_q0, "(port)in_1_q0");
    sc_trace(mVcdFile, a, "(port)a");
    sc_trace(mVcdFile, b, "(port)b");
    sc_trace(mVcdFile, c, "(port)c");
    sc_trace(mVcdFile, out_0_address0, "(port)out_0_address0");
    sc_trace(mVcdFile, out_0_ce0, "(port)out_0_ce0");
    sc_trace(mVcdFile, out_0_we0, "(port)out_0_we0");
    sc_trace(mVcdFile, out_0_d0, "(port)out_0_d0");
    sc_trace(mVcdFile, out_1_address0, "(port)out_1_address0");
    sc_trace(mVcdFile, out_1_ce0, "(port)out_1_ce0");
    sc_trace(mVcdFile, out_1_we0, "(port)out_1_we0");
    sc_trace(mVcdFile, out_1_d0, "(port)out_1_d0");
    sc_trace(mVcdFile, out_2_address0, "(port)out_2_address0");
    sc_trace(mVcdFile, out_2_ce0, "(port)out_2_ce0");
    sc_trace(mVcdFile, out_2_we0, "(port)out_2_we0");
    sc_trace(mVcdFile, out_2_d0, "(port)out_2_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sext_ln24_fu_181_p1, "sext_ln24_fu_181_p1");
    sc_trace(mVcdFile, sext_ln24_reg_310, "sext_ln24_reg_310");
    sc_trace(mVcdFile, res_fu_189_p2, "res_fu_189_p2");
    sc_trace(mVcdFile, res_reg_315, "res_reg_315");
    sc_trace(mVcdFile, sext_ln24_1_fu_201_p1, "sext_ln24_1_fu_201_p1");
    sc_trace(mVcdFile, sext_ln24_1_reg_320, "sext_ln24_1_reg_320");
    sc_trace(mVcdFile, i_fu_211_p2, "i_fu_211_p2");
    sc_trace(mVcdFile, i_reg_328, "i_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln19_fu_217_p2, "icmp_ln19_fu_217_p2");
    sc_trace(mVcdFile, icmp_ln19_reg_333, "icmp_ln19_reg_333");
    sc_trace(mVcdFile, icmp_ln17_fu_205_p2, "icmp_ln17_fu_205_p2");
    sc_trace(mVcdFile, add_ln26_fu_243_p2, "add_ln26_fu_243_p2");
    sc_trace(mVcdFile, add_ln26_reg_348, "add_ln26_reg_348");
    sc_trace(mVcdFile, tmp_reg_353, "tmp_reg_353");
    sc_trace(mVcdFile, mul_ln24_fu_266_p2, "mul_ln24_fu_266_p2");
    sc_trace(mVcdFile, mul_ln24_reg_357, "mul_ln24_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, select_ln17_fu_302_p3, "select_ln17_fu_302_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_0_reg_147, "i_0_reg_147");
    sc_trace(mVcdFile, phi_mul_reg_158, "phi_mul_reg_158");
    sc_trace(mVcdFile, phi_urem_reg_169, "phi_urem_reg_169");
    sc_trace(mVcdFile, zext_ln19_fu_237_p1, "zext_ln19_fu_237_p1");
    sc_trace(mVcdFile, zext_ln26_fu_283_p1, "zext_ln26_fu_283_p1");
    sc_trace(mVcdFile, y_fu_275_p2, "y_fu_275_p2");
    sc_trace(mVcdFile, res_fu_189_p0, "res_fu_189_p0");
    sc_trace(mVcdFile, res_fu_189_p1, "res_fu_189_p1");
    sc_trace(mVcdFile, sext_ln34_fu_185_p1, "sext_ln34_fu_185_p1");
    sc_trace(mVcdFile, add_ln24_1_fu_195_p2, "add_ln24_1_fu_195_p2");
    sc_trace(mVcdFile, add_ln19_fu_223_p2, "add_ln19_fu_223_p2");
    sc_trace(mVcdFile, select_ln19_fu_229_p3, "select_ln19_fu_229_p3");
    sc_trace(mVcdFile, mul_ln24_fu_266_p0, "mul_ln24_fu_266_p0");
    sc_trace(mVcdFile, x_fu_259_p3, "x_fu_259_p3");
    sc_trace(mVcdFile, add_ln24_fu_271_p2, "add_ln24_fu_271_p2");
    sc_trace(mVcdFile, add_ln17_1_fu_290_p2, "add_ln17_1_fu_290_p2");
    sc_trace(mVcdFile, icmp_ln17_1_fu_296_p2, "icmp_ln17_1_fu_296_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("lec8Ex1.hdltvin.dat");
    mHdltvoutHandle.open("lec8Ex1.hdltvout.dat");
}

lec8Ex1::~lec8Ex1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void lec8Ex1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_reg_147 = i_reg_328.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_147 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        phi_mul_reg_158 = add_ln26_reg_348.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_158 = ap_const_lv13_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        phi_urem_reg_169 = select_ln17_fu_302_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_urem_reg_169 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_205_p2.read(), ap_const_lv1_0))) {
        add_ln26_reg_348 = add_ln26_fu_243_p2.read();
        icmp_ln19_reg_333 = icmp_ln19_fu_217_p2.read();
        tmp_reg_353 = phi_mul_reg_158.read().range(12, 11);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_328 = i_fu_211_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        mul_ln24_reg_357 = mul_ln24_fu_266_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        res_reg_315 = res_fu_189_p2.read();
        sext_ln24_1_reg_320 = sext_ln24_1_fu_201_p1.read();
        sext_ln24_reg_310 = sext_ln24_fu_181_p1.read();
    }
}

void lec8Ex1::thread_add_ln17_1_fu_290_p2() {
    add_ln17_1_fu_290_p2 = (!phi_urem_reg_169.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(phi_urem_reg_169.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void lec8Ex1::thread_add_ln19_fu_223_p2() {
    add_ln19_fu_223_p2 = (!i_0_reg_147.read().is_01() || !ap_const_lv6_22.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_147.read()) + sc_bigint<6>(ap_const_lv6_22));
}

void lec8Ex1::thread_add_ln24_1_fu_195_p2() {
    add_ln24_1_fu_195_p2 = (!sext_ln34_fu_185_p1.read().is_01() || !ap_const_lv17_27.is_01())? sc_lv<17>(): (sc_bigint<17>(sext_ln34_fu_185_p1.read()) + sc_biguint<17>(ap_const_lv17_27));
}

void lec8Ex1::thread_add_ln24_fu_271_p2() {
    add_ln24_fu_271_p2 = (!mul_ln24_reg_357.read().is_01() || !res_reg_315.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln24_reg_357.read()) + sc_biguint<32>(res_reg_315.read()));
}

void lec8Ex1::thread_add_ln26_fu_243_p2() {
    add_ln26_fu_243_p2 = (!phi_mul_reg_158.read().is_01() || !ap_const_lv13_67.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_158.read()) + sc_biguint<13>(ap_const_lv13_67));
}

void lec8Ex1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void lec8Ex1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void lec8Ex1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void lec8Ex1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void lec8Ex1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_205_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void lec8Ex1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void lec8Ex1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_205_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void lec8Ex1::thread_i_fu_211_p2() {
    i_fu_211_p2 = (!i_0_reg_147.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_147.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void lec8Ex1::thread_icmp_ln17_1_fu_296_p2() {
    icmp_ln17_1_fu_296_p2 = (!add_ln17_1_fu_290_p2.read().is_01() || !ap_const_lv6_14.is_01())? sc_lv<1>(): (sc_biguint<6>(add_ln17_1_fu_290_p2.read()) < sc_biguint<6>(ap_const_lv6_14));
}

void lec8Ex1::thread_icmp_ln17_fu_205_p2() {
    icmp_ln17_fu_205_p2 = (!i_0_reg_147.read().is_01() || !ap_const_lv6_3C.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_147.read() == ap_const_lv6_3C);
}

void lec8Ex1::thread_icmp_ln19_fu_217_p2() {
    icmp_ln19_fu_217_p2 = (!i_0_reg_147.read().is_01() || !ap_const_lv6_1E.is_01())? sc_lv<1>(): (sc_biguint<6>(i_0_reg_147.read()) < sc_biguint<6>(ap_const_lv6_1E));
}

void lec8Ex1::thread_in_0_address0() {
    in_0_address0 =  (sc_lv<5>) (zext_ln19_fu_237_p1.read());
}

void lec8Ex1::thread_in_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_0_ce0 = ap_const_logic_1;
    } else {
        in_0_ce0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_in_1_address0() {
    in_1_address0 =  (sc_lv<5>) (zext_ln19_fu_237_p1.read());
}

void lec8Ex1::thread_in_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_1_ce0 = ap_const_logic_1;
    } else {
        in_1_ce0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_mul_ln24_fu_266_p0() {
    mul_ln24_fu_266_p0 =  (sc_lv<16>) (sext_ln24_reg_310.read());
}

void lec8Ex1::thread_mul_ln24_fu_266_p2() {
    mul_ln24_fu_266_p2 = (!mul_ln24_fu_266_p0.read().is_01() || !x_fu_259_p3.read().is_01())? sc_lv<32>(): sc_bigint<16>(mul_ln24_fu_266_p0.read()) * sc_bigint<32>(x_fu_259_p3.read());
}

void lec8Ex1::thread_out_0_address0() {
    out_0_address0 =  (sc_lv<5>) (zext_ln26_fu_283_p1.read());
}

void lec8Ex1::thread_out_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_0_ce0 = ap_const_logic_1;
    } else {
        out_0_ce0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_out_0_d0() {
    out_0_d0 = y_fu_275_p2.read();
}

void lec8Ex1::thread_out_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(tmp_reg_353.read(), ap_const_lv2_0))) {
        out_0_we0 = ap_const_logic_1;
    } else {
        out_0_we0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_out_1_address0() {
    out_1_address0 =  (sc_lv<5>) (zext_ln26_fu_283_p1.read());
}

void lec8Ex1::thread_out_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_1_ce0 = ap_const_logic_1;
    } else {
        out_1_ce0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_out_1_d0() {
    out_1_d0 = y_fu_275_p2.read();
}

void lec8Ex1::thread_out_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,2,2>(tmp_reg_353.read(), ap_const_lv2_1))) {
        out_1_we0 = ap_const_logic_1;
    } else {
        out_1_we0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_out_2_address0() {
    out_2_address0 =  (sc_lv<5>) (zext_ln26_fu_283_p1.read());
}

void lec8Ex1::thread_out_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_2_ce0 = ap_const_logic_1;
    } else {
        out_2_ce0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_out_2_d0() {
    out_2_d0 = y_fu_275_p2.read();
}

void lec8Ex1::thread_out_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         !esl_seteq<1,2,2>(tmp_reg_353.read(), ap_const_lv2_0) && 
         !esl_seteq<1,2,2>(tmp_reg_353.read(), ap_const_lv2_1))) {
        out_2_we0 = ap_const_logic_1;
    } else {
        out_2_we0 = ap_const_logic_0;
    }
}

void lec8Ex1::thread_res_fu_189_p0() {
    res_fu_189_p0 = c.read();
}

void lec8Ex1::thread_res_fu_189_p1() {
    res_fu_189_p1 = c.read();
}

void lec8Ex1::thread_res_fu_189_p2() {
    res_fu_189_p2 = (!res_fu_189_p0.read().is_01() || !res_fu_189_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(res_fu_189_p0.read()) * sc_bigint<32>(res_fu_189_p1.read());
}

void lec8Ex1::thread_select_ln17_fu_302_p3() {
    select_ln17_fu_302_p3 = (!icmp_ln17_1_fu_296_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln17_1_fu_296_p2.read()[0].to_bool())? add_ln17_1_fu_290_p2.read(): ap_const_lv6_0);
}

void lec8Ex1::thread_select_ln19_fu_229_p3() {
    select_ln19_fu_229_p3 = (!icmp_ln19_fu_217_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln19_fu_217_p2.read()[0].to_bool())? i_0_reg_147.read(): add_ln19_fu_223_p2.read());
}

void lec8Ex1::thread_sext_ln24_1_fu_201_p1() {
    sext_ln24_1_fu_201_p1 = esl_sext<32,17>(add_ln24_1_fu_195_p2.read());
}

void lec8Ex1::thread_sext_ln24_fu_181_p1() {
    sext_ln24_fu_181_p1 = esl_sext<32,16>(a.read());
}

void lec8Ex1::thread_sext_ln34_fu_185_p1() {
    sext_ln34_fu_185_p1 = esl_sext<17,16>(b.read());
}

void lec8Ex1::thread_x_fu_259_p3() {
    x_fu_259_p3 = (!icmp_ln19_reg_333.read()[0].is_01())? sc_lv<32>(): ((icmp_ln19_reg_333.read()[0].to_bool())? in_0_q0.read(): in_1_q0.read());
}

void lec8Ex1::thread_y_fu_275_p2() {
    y_fu_275_p2 = (!add_ln24_fu_271_p2.read().is_01() || !sext_ln24_1_reg_320.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln24_fu_271_p2.read()) + sc_bigint<32>(sext_ln24_1_reg_320.read()));
}

void lec8Ex1::thread_zext_ln19_fu_237_p1() {
    zext_ln19_fu_237_p1 = esl_zext<64,6>(select_ln19_fu_229_p3.read());
}

void lec8Ex1::thread_zext_ln26_fu_283_p1() {
    zext_ln26_fu_283_p1 = esl_zext<64,6>(phi_urem_reg_169.read());
}

void lec8Ex1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_205_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void lec8Ex1::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_0_address0\" :  \"" << in_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_0_ce0\" :  \"" << in_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_0_q0\" :  \"" << in_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_1_address0\" :  \"" << in_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_1_ce0\" :  \"" << in_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_1_q0\" :  \"" << in_1_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a\" :  \"" << a.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b\" :  \"" << b.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c\" :  \"" << c.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_address0\" :  \"" << out_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_ce0\" :  \"" << out_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_we0\" :  \"" << out_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_0_d0\" :  \"" << out_0_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_address0\" :  \"" << out_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_ce0\" :  \"" << out_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_we0\" :  \"" << out_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_1_d0\" :  \"" << out_1_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_address0\" :  \"" << out_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_ce0\" :  \"" << out_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_we0\" :  \"" << out_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_2_d0\" :  \"" << out_2_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

