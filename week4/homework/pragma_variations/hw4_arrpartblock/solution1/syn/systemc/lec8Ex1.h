// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _lec8Ex1_HH_
#define _lec8Ex1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct lec8Ex1 : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > in_0_address0;
    sc_out< sc_logic > in_0_ce0;
    sc_in< sc_lv<32> > in_0_q0;
    sc_out< sc_lv<5> > in_1_address0;
    sc_out< sc_logic > in_1_ce0;
    sc_in< sc_lv<32> > in_1_q0;
    sc_in< sc_lv<16> > a;
    sc_in< sc_lv<16> > b;
    sc_in< sc_lv<32> > c;
    sc_out< sc_lv<5> > out_0_address0;
    sc_out< sc_logic > out_0_ce0;
    sc_out< sc_logic > out_0_we0;
    sc_out< sc_lv<32> > out_0_d0;
    sc_out< sc_lv<5> > out_1_address0;
    sc_out< sc_logic > out_1_ce0;
    sc_out< sc_logic > out_1_we0;
    sc_out< sc_lv<32> > out_1_d0;
    sc_out< sc_lv<5> > out_2_address0;
    sc_out< sc_logic > out_2_ce0;
    sc_out< sc_logic > out_2_we0;
    sc_out< sc_lv<32> > out_2_d0;


    // Module declarations
    lec8Ex1(sc_module_name name);
    SC_HAS_PROCESS(lec8Ex1);

    ~lec8Ex1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > sext_ln24_fu_181_p1;
    sc_signal< sc_lv<32> > sext_ln24_reg_310;
    sc_signal< sc_lv<32> > res_fu_189_p2;
    sc_signal< sc_lv<32> > res_reg_315;
    sc_signal< sc_lv<32> > sext_ln24_1_fu_201_p1;
    sc_signal< sc_lv<32> > sext_ln24_1_reg_320;
    sc_signal< sc_lv<6> > i_fu_211_p2;
    sc_signal< sc_lv<6> > i_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln19_fu_217_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_333;
    sc_signal< sc_lv<1> > icmp_ln17_fu_205_p2;
    sc_signal< sc_lv<13> > add_ln26_fu_243_p2;
    sc_signal< sc_lv<13> > add_ln26_reg_348;
    sc_signal< sc_lv<2> > tmp_reg_353;
    sc_signal< sc_lv<32> > mul_ln24_fu_266_p2;
    sc_signal< sc_lv<32> > mul_ln24_reg_357;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > select_ln17_fu_302_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i_0_reg_147;
    sc_signal< sc_lv<13> > phi_mul_reg_158;
    sc_signal< sc_lv<6> > phi_urem_reg_169;
    sc_signal< sc_lv<64> > zext_ln19_fu_237_p1;
    sc_signal< sc_lv<64> > zext_ln26_fu_283_p1;
    sc_signal< sc_lv<32> > y_fu_275_p2;
    sc_signal< sc_lv<32> > res_fu_189_p0;
    sc_signal< sc_lv<32> > res_fu_189_p1;
    sc_signal< sc_lv<17> > sext_ln34_fu_185_p1;
    sc_signal< sc_lv<17> > add_ln24_1_fu_195_p2;
    sc_signal< sc_lv<6> > add_ln19_fu_223_p2;
    sc_signal< sc_lv<6> > select_ln19_fu_229_p3;
    sc_signal< sc_lv<16> > mul_ln24_fu_266_p0;
    sc_signal< sc_lv<32> > x_fu_259_p3;
    sc_signal< sc_lv<32> > add_ln24_fu_271_p2;
    sc_signal< sc_lv<6> > add_ln17_1_fu_290_p2;
    sc_signal< sc_lv<1> > icmp_ln17_1_fu_296_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<17> ap_const_lv17_27;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_1E;
    static const sc_lv<6> ap_const_lv6_22;
    static const sc_lv<13> ap_const_lv13_67;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<6> ap_const_lv6_14;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln17_1_fu_290_p2();
    void thread_add_ln19_fu_223_p2();
    void thread_add_ln24_1_fu_195_p2();
    void thread_add_ln24_fu_271_p2();
    void thread_add_ln26_fu_243_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_211_p2();
    void thread_icmp_ln17_1_fu_296_p2();
    void thread_icmp_ln17_fu_205_p2();
    void thread_icmp_ln19_fu_217_p2();
    void thread_in_0_address0();
    void thread_in_0_ce0();
    void thread_in_1_address0();
    void thread_in_1_ce0();
    void thread_mul_ln24_fu_266_p0();
    void thread_mul_ln24_fu_266_p2();
    void thread_out_0_address0();
    void thread_out_0_ce0();
    void thread_out_0_d0();
    void thread_out_0_we0();
    void thread_out_1_address0();
    void thread_out_1_ce0();
    void thread_out_1_d0();
    void thread_out_1_we0();
    void thread_out_2_address0();
    void thread_out_2_ce0();
    void thread_out_2_d0();
    void thread_out_2_we0();
    void thread_res_fu_189_p0();
    void thread_res_fu_189_p1();
    void thread_res_fu_189_p2();
    void thread_select_ln17_fu_302_p3();
    void thread_select_ln19_fu_229_p3();
    void thread_sext_ln24_1_fu_201_p1();
    void thread_sext_ln24_fu_181_p1();
    void thread_sext_ln34_fu_185_p1();
    void thread_x_fu_259_p3();
    void thread_y_fu_275_p2();
    void thread_zext_ln19_fu_237_p1();
    void thread_zext_ln26_fu_283_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
