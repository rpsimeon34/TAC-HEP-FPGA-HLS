// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ex3_HH_
#define _ex3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ex3_sdiv_6s_6ns_6bkb.h"
#include "ex3_mac_muladd_6scud.h"

namespace ap_rtl {

struct ex3 : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<6> > a_V;
    sc_in< sc_lv<6> > b_V;
    sc_out< sc_lv<6> > c_V;
    sc_out< sc_logic > c_V_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ex3(sc_module_name name);
    SC_HAS_PROCESS(ex3);

    ~ex3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    ex3_sdiv_6s_6ns_6bkb<1,10,6,6,6>* ex3_sdiv_6s_6ns_6bkb_U1;
    ex3_mac_muladd_6scud<1,1,6,6,6,6>* ex3_mac_muladd_6scud_U2;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > grp_fu_45_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<6> > z_V_fu_41_p1;
    sc_signal< sc_lv<6> > grp_fu_35_p2;
    sc_signal< sc_lv<6> > grp_fu_45_p2;
    sc_signal< sc_logic > grp_fu_35_ap_start;
    sc_signal< sc_logic > grp_fu_35_ap_done;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V();
    void thread_c_V_ap_vld();
    void thread_grp_fu_35_ap_start();
    void thread_grp_fu_45_p2();
    void thread_z_V_fu_41_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
