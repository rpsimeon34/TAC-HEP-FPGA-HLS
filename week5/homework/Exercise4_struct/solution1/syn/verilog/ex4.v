// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ex4,hls_ip_2020_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.777000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=295,HLS_VERSION=2020_1}" *)

module ex4 (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_A1,
        A_A2,
        A_A3,
        A_A4,
        A_A5,
        A_A6,
        A_A7,
        A_A8,
        A_A9,
        A_A10,
        B,
        B_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_A1;
input  [31:0] A_A2;
input  [31:0] A_A3;
input  [31:0] A_A4;
input  [31:0] A_A5;
input  [31:0] A_A6;
input  [31:0] A_A7;
input  [31:0] A_A8;
input  [31:0] A_A9;
input  [31:0] A_A10;
output  [31:0] B;
output   B_ap_vld;

reg B_ap_vld;

wire   [31:0] add_ln16_1_fu_105_p2;
wire   [31:0] add_ln16_2_fu_111_p2;
wire   [31:0] add_ln16_fu_99_p2;
wire   [31:0] add_ln16_5_fu_129_p2;
wire   [31:0] add_ln16_6_fu_135_p2;
wire   [31:0] add_ln16_4_fu_123_p2;
wire   [31:0] add_ln16_7_fu_141_p2;
wire   [31:0] add_ln16_3_fu_117_p2;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        B_ap_vld = 1'b1;
    end else begin
        B_ap_vld = 1'b0;
    end
end

assign B = (add_ln16_7_fu_141_p2 + add_ln16_3_fu_117_p2);

assign add_ln16_1_fu_105_p2 = (A_A4 + A_A5);

assign add_ln16_2_fu_111_p2 = (add_ln16_1_fu_105_p2 + A_A3);

assign add_ln16_3_fu_117_p2 = (add_ln16_2_fu_111_p2 + add_ln16_fu_99_p2);

assign add_ln16_4_fu_123_p2 = (A_A6 + A_A7);

assign add_ln16_5_fu_129_p2 = (A_A9 + A_A10);

assign add_ln16_6_fu_135_p2 = (add_ln16_5_fu_129_p2 + A_A8);

assign add_ln16_7_fu_141_p2 = (add_ln16_6_fu_135_p2 + add_ln16_4_fu_123_p2);

assign add_ln16_fu_99_p2 = (A_A2 + A_A1);

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

endmodule //ex4
