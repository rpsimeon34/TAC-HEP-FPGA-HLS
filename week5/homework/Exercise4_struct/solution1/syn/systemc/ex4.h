// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ex4_HH_
#define _ex4_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ex4 : public sc_module {
    // Port declarations 16
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_A1;
    sc_in< sc_lv<32> > A_A2;
    sc_in< sc_lv<32> > A_A3;
    sc_in< sc_lv<32> > A_A4;
    sc_in< sc_lv<32> > A_A5;
    sc_in< sc_lv<32> > A_A6;
    sc_in< sc_lv<32> > A_A7;
    sc_in< sc_lv<32> > A_A8;
    sc_in< sc_lv<32> > A_A9;
    sc_in< sc_lv<32> > A_A10;
    sc_out< sc_lv<32> > B;
    sc_out< sc_logic > B_ap_vld;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    ex4(sc_module_name name);
    SC_HAS_PROCESS(ex4);

    ~ex4();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<32> > add_ln16_1_fu_105_p2;
    sc_signal< sc_lv<32> > add_ln16_2_fu_111_p2;
    sc_signal< sc_lv<32> > add_ln16_fu_99_p2;
    sc_signal< sc_lv<32> > add_ln16_5_fu_129_p2;
    sc_signal< sc_lv<32> > add_ln16_6_fu_135_p2;
    sc_signal< sc_lv<32> > add_ln16_4_fu_123_p2;
    sc_signal< sc_lv<32> > add_ln16_7_fu_141_p2;
    sc_signal< sc_lv<32> > add_ln16_3_fu_117_p2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_B();
    void thread_B_ap_vld();
    void thread_add_ln16_1_fu_105_p2();
    void thread_add_ln16_2_fu_111_p2();
    void thread_add_ln16_3_fu_117_p2();
    void thread_add_ln16_4_fu_123_p2();
    void thread_add_ln16_5_fu_129_p2();
    void thread_add_ln16_6_fu_135_p2();
    void thread_add_ln16_7_fu_141_p2();
    void thread_add_ln16_fu_99_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
